{
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/server.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/server.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/server.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/server.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/",
        "sourceFileName": "server.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startUp = exports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _cors = _interopRequireDefault(require(\"cors\"));\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\nvar _express = _interopRequireWildcard(require(\"express\"));\nvar _expressJwt = require(\"express-jwt\");\nvar _appointmentUtils = require(\"./db-func/appointmentUtils\");\nvar _index = require(\"./middlewares/index\");\nvar _appointment = _interopRequireDefault(require(\"./route-methods/appointment\"));\nvar _staff = _interopRequireDefault(require(\"./route-methods/staff\"));\nvar _treatment = _interopRequireDefault(require(\"./route-methods/treatment\"));\nvar _user = _interopRequireDefault(require(\"./route-methods/user\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n_dotenv[\"default\"].config();\nif (!process.env.EXPRESS_SECRET) {\n  // eslint-disable-next-line no-console\n  console.error('EXPRESS_SECRET must be defined in .env\\nEXITING.');\n  process.exit(-1);\n}\n\n// typing for Express request with jwt\n\nvar app = (0, _express[\"default\"])();\n\n// CORS for react app, assuming port 3000\napp.use((0, _cors[\"default\"])({\n  origin: 'http://localhost:3000',\n  credentials: true\n}));\n\n/* ********* middlewares ********* */\n// use middleware to serve static images\napp.use(_express[\"default\"][\"static\"]('public'));\n\n// middleware for parsing json body\napp.use((0, _express.json)());\napp.use('/user/:id', (0, _expressJwt.expressjwt)({\n  // process.env.EXPRESS_SECRET is checked for truthiness on app startup\n  // the || is to satisfy typescript\n  secret: process.env.EXPRESS_SECRET || 'NOT SO SECRET',\n  algorithms: ['HS256'],\n  requestProperty: 'auth'\n}));\napp.use('/user/:id', _index.validateUser);\n\n// note: should really validate user for editing appointments\n// I'm lazy and not implementing this. Spa managers beware!\n\n/* *********** routes ********* */\n\n// verify login\napp.post('/signin', _user[\"default\"].auth);\n\n// user profile protected by jwt\napp.get('/user/:id', _user[\"default\"].get);\napp.get('/user/:id/appointments', _user[\"default\"].getUserAppointments);\napp[\"delete\"]('/user/:id', _user[\"default\"].remove);\napp.patch('/user/:id', _user[\"default\"].update);\n\n// adding user\napp.post('/user', _user[\"default\"].create);\napp.get('/appointments/:year/:month', _appointment[\"default\"].get);\napp.patch('/appointment/:id', _appointment[\"default\"].update);\napp.get('/treatments', _treatment[\"default\"].get);\napp.get('/staff', _staff[\"default\"].get);\n/* *********** END: routes ********* */\n\nvar startUp = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _appointmentUtils.createAppointments)();\n          case 2:\n            // eslint-disable-next-line no-console\n            app.listen(3030, function () {\n              return console.log('Spa server listening on port 3030!');\n            });\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function startUp() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.startUp = startUp;\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "_cors",
        "_interopRequireDefault",
        "require",
        "_dotenv",
        "_express",
        "_interopRequireWildcard",
        "_expressJwt",
        "_appointmentUtils",
        "_index",
        "_appointment",
        "_staff",
        "_treatment",
        "_user",
        "_getRequireWildcardCache",
        "nodeInterop",
        "WeakMap",
        "cacheBabelInterop",
        "cacheNodeInterop",
        "obj",
        "__esModule",
        "_typeof",
        "cache",
        "has",
        "get",
        "newObj",
        "hasPropertyDescriptor",
        "Object",
        "defineProperty",
        "getOwnPropertyDescriptor",
        "key",
        "prototype",
        "hasOwnProperty",
        "call",
        "desc",
        "set",
        "dotenv",
        "config",
        "process",
        "env",
        "EXPRESS_SECRET",
        "console",
        "error",
        "exit",
        "app",
        "express",
        "use",
        "cors",
        "origin",
        "credentials",
        "json",
        "jwt",
        "secret",
        "algorithms",
        "requestProperty",
        "validateUser",
        "post",
        "userRoutes",
        "auth",
        "getUserAppointments",
        "remove",
        "patch",
        "update",
        "create",
        "appointmentRoutes",
        "treatmentRoutes",
        "staffRoutes",
        "startUp",
        "_ref",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "createAppointments",
        "listen",
        "log",
        "stop",
        "apply",
        "arguments",
        "exports",
        "_default"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/",
      "sources": [
        "server.ts"
      ],
      "sourcesContent": [
        "import cors from 'cors';\nimport dotenv from 'dotenv';\nimport express, { json } from 'express';\nimport { expressjwt as jwt } from 'express-jwt';\n\nimport { User as UserType } from '../../shared/types';\nimport { createAppointments } from './db-func/appointmentUtils';\nimport { validateUser } from './middlewares/index';\nimport appointmentRoutes from './route-methods/appointment';\nimport staffRoutes from './route-methods/staff';\nimport treatmentRoutes from './route-methods/treatment';\nimport userRoutes from './route-methods/user';\n\ndotenv.config();\nif (!process.env.EXPRESS_SECRET) {\n  // eslint-disable-next-line no-console\n  console.error('EXPRESS_SECRET must be defined in .env\\nEXITING.');\n  process.exit(-1);\n}\n\n// typing for Express request with jwt\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Express {\n    interface Request {\n      auth?: UserType;\n    }\n  }\n}\n\nconst app = express();\n\n// CORS for react app, assuming port 3000\napp.use(\n  cors({\n    origin: 'http://localhost:3000',\n    credentials: true,\n  }),\n);\n\n/* ********* middlewares ********* */\n// use middleware to serve static images\napp.use(express.static('public'));\n\n// middleware for parsing json body\napp.use(json());\n\napp.use(\n  '/user/:id',\n  jwt({\n    // process.env.EXPRESS_SECRET is checked for truthiness on app startup\n    // the || is to satisfy typescript\n    secret: process.env.EXPRESS_SECRET || 'NOT SO SECRET',\n    algorithms: ['HS256'],\n    requestProperty: 'auth',\n  }),\n);\napp.use('/user/:id', validateUser);\n\n// note: should really validate user for editing appointments\n// I'm lazy and not implementing this. Spa managers beware!\n\n/* *********** routes ********* */\n\n// verify login\napp.post('/signin', userRoutes.auth);\n\n// user profile protected by jwt\napp.get('/user/:id', userRoutes.get);\napp.get('/user/:id/appointments', userRoutes.getUserAppointments);\napp.delete('/user/:id', userRoutes.remove);\napp.patch('/user/:id', userRoutes.update);\n\n// adding user\napp.post('/user', userRoutes.create);\n\napp.get('/appointments/:year/:month', appointmentRoutes.get);\napp.patch('/appointment/:id', appointmentRoutes.update);\n\napp.get('/treatments', treatmentRoutes.get);\napp.get('/staff', staffRoutes.get);\n/* *********** END: routes ********* */\n\nexport const startUp = async () => {\n  // create appointments relevant to current date\n  await createAppointments();\n\n  // eslint-disable-next-line no-console\n  app.listen(3030, () => console.log('Spa server listening on port 3030!'));\n};\n\nexport default app;\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
        "sourceFileName": "appointmentUtils.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAppointments = createAppointments;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\nvar _ = _interopRequireDefault(require(\".\"));\n/* eslint-disable no-plusplus */\n/* eslint-disable max-lines-per-function */\n\n// utility function to make unpadded month/date numbers into padded\nfunction padNum(num) {\n  return num.toString().length === 1 ? \"0\".concat(num) : num.toString();\n}\n\n// utility function to make appointment from date and treatment type\nfunction makeAppointment(treatmentName, dateTime, existingAppointmentsById) {\n  var id = Number((0, _dayjs[\"default\"])(dateTime).unix());\n\n  // if the appointment is filled, don't make the recurring appointment\n  if (existingAppointmentsById[id]) return existingAppointmentsById[id];\n\n  // otherwise, make the recurring appointment\n  var appointment = {\n    id: id,\n    dateTime: dateTime.toDate(),\n    treatmentName: treatmentName\n  };\n\n  // assign some appointments as filled by nonexistent \"user 100\" based on datetime mod\n  if (Math.floor(Math.random() * 10) % 3 === 0) appointment.userId = 100;\n  return appointment;\n}\n\n// generate an appointments object with recurring appointments and add to db\n// (if not already there)\n// Meant to be run on server startup\nfunction createAppointments() {\n  return _createAppointments.apply(this, arguments);\n}\nfunction _createAppointments() {\n  _createAppointments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var existingAppointments, existingAppointmentsById, allAppointments, month, year, monthsFromNow, monthString, startDate, lastDate, i, dayNum, thisDate, dayofWeek, _i, randNum;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // eslint-disable-next-line no-console\n            console.log('Creating appointments...');\n            _context.next = 3;\n            return _[\"default\"].getAppointments();\n          case 3:\n            existingAppointments = _context.sent;\n            // make a map of appointments by id for easy access;\n            existingAppointmentsById = {};\n            existingAppointments.forEach(function (a) {\n              existingAppointmentsById[a.id] = a;\n            });\n            allAppointments = []; // start with today\n            month = (0, _dayjs[\"default\"])().month();\n            year = (0, _dayjs[\"default\"])().year(); // do this for three months; dayjs 0-indexes its months, hence starting at 1\n            monthsFromNow = 1;\n          case 10:\n            if (!(monthsFromNow < 4)) {\n              _context.next = 44;\n              break;\n            }\n            // make sure month is two digits;\n            monthString = padNum(month + monthsFromNow);\n            startDate = (0, _dayjs[\"default\"])(\"\".concat(year).concat(monthString, \"01\"));\n            lastDate = Number(startDate.endOf('month').format('DD'));\n            i = 0;\n          case 15:\n            if (!(i < lastDate)) {\n              _context.next = 41;\n              break;\n            }\n            dayNum = i + 1;\n            thisDate = (0, _dayjs[\"default\"])(\"\".concat(year).concat(monthString).concat(padNum(dayNum)));\n            dayofWeek = Number(thisDate.format('d'));\n            _context.t0 = dayofWeek;\n            _context.next = _context.t0 === 1 ? 22 : _context.t0 === 2 ? 25 : _context.t0 === 3 ? 28 : _context.t0 === 4 ? 31 : _context.t0 === 5 ? 34 : 37;\n            break;\n          case 22:\n            // Mondays: massage 10am, facial 2pm\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(10, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('facial', thisDate.clone().add(14, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 25:\n            // Tuesdays: scrub 1pm, massage 3pm\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(13, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(15, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 28:\n            // Wednesdays: facial: 11am, scrub 4pm\n            allAppointments.push(makeAppointment('facial', thisDate.clone().add(11, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(16, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 31:\n            // Thursdays: scrub: 9am, scrub 1pm\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(9, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(13, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 34:\n            // Fridays: massage: 1pm, massage 3pm\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(13, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(15, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 37:\n            return _context.abrupt(\"break\", 38);\n          case 38:\n            i++;\n            _context.next = 15;\n            break;\n          case 41:\n            monthsFromNow++;\n            _context.next = 10;\n            break;\n          case 44:\n            // add a few for user 1\n            for (_i = 0; _i < allAppointments.length; _i++) {\n              if (_i % 45 === 0) {\n                randNum = Math.floor(Math.random() * 14) - 7;\n                if (randNum < 0) randNum = 0;\n                if (randNum > allAppointments.length - 1) randNum = allAppointments.length - 1;\n                allAppointments[_i + randNum].userId = 1;\n              }\n            }\n            _context.next = 47;\n            return _[\"default\"].writeAppointments(allAppointments);\n          case 47:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createAppointments.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "_dayjs",
        "_interopRequireDefault",
        "require",
        "_",
        "padNum",
        "num",
        "toString",
        "length",
        "concat",
        "makeAppointment",
        "treatmentName",
        "dateTime",
        "existingAppointmentsById",
        "id",
        "Number",
        "dayjs",
        "unix",
        "appointment",
        "toDate",
        "Math",
        "floor",
        "random",
        "userId",
        "createAppointments",
        "_createAppointments",
        "apply",
        "arguments",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "existingAppointments",
        "allAppointments",
        "month",
        "year",
        "monthsFromNow",
        "monthString",
        "startDate",
        "lastDate",
        "i",
        "dayNum",
        "thisDate",
        "dayofWeek",
        "_i",
        "randNum",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "console",
        "log",
        "db",
        "getAppointments",
        "sent",
        "forEach",
        "a",
        "endOf",
        "format",
        "t0",
        "push",
        "clone",
        "add",
        "abrupt",
        "writeAppointments",
        "stop"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "sources": [
        "appointmentUtils.ts"
      ],
      "sourcesContent": [
        "/* eslint-disable no-plusplus */\n/* eslint-disable max-lines-per-function */\nimport dayjs from 'dayjs';\n\nimport { Appointment } from '../../../shared/types';\nimport db from '.';\n\n// utility function to make unpadded month/date numbers into padded\nfunction padNum(num: number | string): string {\n  return num.toString().length === 1 ? `0${num}` : num.toString();\n}\n\n// utility function to make appointment from date and treatment type\nfunction makeAppointment(\n  treatmentName: string,\n  dateTime: dayjs.Dayjs,\n  existingAppointmentsById: Record<number, Appointment>,\n): Appointment {\n  const id = Number(dayjs(dateTime).unix());\n\n  // if the appointment is filled, don't make the recurring appointment\n  if (existingAppointmentsById[id]) return existingAppointmentsById[id];\n\n  // otherwise, make the recurring appointment\n  const appointment: Appointment = {\n    id,\n    dateTime: dateTime.toDate(),\n    treatmentName,\n  };\n\n  // assign some appointments as filled by nonexistent \"user 100\" based on datetime mod\n  if (Math.floor(Math.random() * 10) % 3 === 0) appointment.userId = 100;\n\n  return appointment;\n}\n\n// generate an appointments object with recurring appointments and add to db\n// (if not already there)\n// Meant to be run on server startup\nexport async function createAppointments(): Promise<void> {\n  // eslint-disable-next-line no-console\n  console.log('Creating appointments...');\n  const existingAppointments = await db.getAppointments();\n\n  // make a map of appointments by id for easy access;\n  const existingAppointmentsById = {};\n  existingAppointments.forEach((a) => {\n    existingAppointmentsById[a.id] = a;\n  });\n\n  const allAppointments: Appointment[] = [];\n\n  // start with today\n  const month = dayjs().month();\n  const year = dayjs().year();\n\n  // do this for three months; dayjs 0-indexes its months, hence starting at 1\n  for (let monthsFromNow = 1; monthsFromNow < 4; monthsFromNow++) {\n    // make sure month is two digits;\n    const monthString = padNum(month + monthsFromNow);\n    const startDate = dayjs(`${year}${monthString}01`);\n    const lastDate = Number(startDate.endOf('month').format('DD'));\n\n    for (let i = 0; i < lastDate; i++) {\n      const dayNum = i + 1;\n      const thisDate = dayjs(`${year}${monthString}${padNum(dayNum)}`);\n      const dayofWeek = Number(thisDate.format('d'));\n      switch (dayofWeek) {\n        case 1:\n          // Mondays: massage 10am, facial 2pm\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(10, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'facial',\n              thisDate.clone().add(14, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 2:\n          // Tuesdays: scrub 1pm, massage 3pm\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(13, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(15, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 3:\n          // Wednesdays: facial: 11am, scrub 4pm\n          allAppointments.push(\n            makeAppointment(\n              'facial',\n              thisDate.clone().add(11, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(16, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 4:\n          // Thursdays: scrub: 9am, scrub 1pm\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(9, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(13, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 5:\n          // Fridays: massage: 1pm, massage 3pm\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(13, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(15, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  // add a few for user 1\n  for (let i = 0; i < allAppointments.length; i++) {\n    if (i % 45 === 0) {\n      let randNum = Math.floor(Math.random() * 14) - 7;\n      if (randNum < 0) randNum = 0;\n      if (randNum > allAppointments.length - 1)\n        randNum = allAppointments.length - 1;\n      allAppointments[i + randNum].userId = 1;\n    }\n  }\n  await db.writeAppointments(allAppointments);\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
        "sourceFileName": "index.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filenames = exports[\"default\"] = void 0;\nexports.getAppointments = getAppointments;\nexports.getAppointmentsByMonthYear = getAppointmentsByMonthYear;\nexports.getStaff = getStaff;\nexports.getTreatments = getTreatments;\nexports.getUserById = getUserById;\nexports.getUsers = getUsers;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\nvar _fastJsonPatch = _interopRequireDefault(require(\"fast-json-patch\"));\nvar _fs = require(\"fs\");\nvar _path = _interopRequireDefault(require(\"path\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; } // NOTE: in production this would connect to a database,\n// not JSON files. However, I didn't want to make you install\n// a particular database in order to use this app.\n//\n// This \"database\" is horribly inefficient and will be a problem\n// when Lazy Days Spa opens to hundreds of locations globally.\nvar dbPath = 'db';\nvar filenames;\n/* ****** Read from file ***** */\nexports.filenames = filenames;\n(function (filenames) {\n  filenames[\"users\"] = \"users.json\";\n  filenames[\"appointments\"] = \"appointments.json\";\n  filenames[\"treatments\"] = \"treatments.json\";\n  filenames[\"staff\"] = \"staff.json\";\n})(filenames || (exports.filenames = filenames = {}));\nfunction getJSONfromFile(_x) {\n  return _getJSONfromFile.apply(this, arguments);\n}\n/* ****** Write to file ***** */\nfunction _getJSONfromFile() {\n  _getJSONfromFile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(filename) {\n    var filePath, data;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            filePath = _path[\"default\"].join(dbPath, filename);\n            _context.next = 3;\n            return _fs.promises.readFile(filePath);\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", JSON.parse(data.toString()));\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getJSONfromFile.apply(this, arguments);\n}\nfunction writeJSONToFile(_x2, _x3) {\n  return _writeJSONToFile.apply(this, arguments);\n}\n/* ****** Delete item ***** */\nfunction _writeJSONToFile() {\n  _writeJSONToFile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(filename, data) {\n    var filePath, jsonData;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            filePath = _path[\"default\"].join(dbPath, filename);\n            jsonData = JSON.stringify(data);\n            _context2.next = 4;\n            return _fs.promises.writeFile(filePath, jsonData, {\n              flag: 'w'\n            });\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _writeJSONToFile.apply(this, arguments);\n}\nfunction deleteItem(_x4, _x5) {\n  return _deleteItem.apply(this, arguments);\n}\n/* ****** Update item ***** */\nfunction _deleteItem() {\n  _deleteItem = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(filename, itemId) {\n    var items, foundItemArray, updatedItems;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return getJSONfromFile(filename);\n          case 3:\n            items = _context3.sent;\n            foundItemArray = items.filter(function (i) {\n              return i.id === itemId;\n            });\n            if (!(foundItemArray.length !== 1)) {\n              _context3.next = 7;\n              break;\n            }\n            throw new Error(\"Could not find item id \".concat(itemId, \" in \").concat(filename));\n          case 7:\n            updatedItems = items.filter(function (i) {\n              return i.id !== itemId;\n            });\n            _context3.next = 10;\n            return writeJSONToFile(filename, updatedItems);\n          case 10:\n            return _context3.abrupt(\"return\", itemId);\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            throw new Error(\"Could not delete item id \".concat(itemId, \" from \").concat(filename, \": \").concat(_context3.t0));\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 13]]);\n  }));\n  return _deleteItem.apply(this, arguments);\n}\nvar applyPatch = _fastJsonPatch[\"default\"].applyPatch;\n// eslint-disable-next-line max-lines-per-function\nfunction updateItem(_x6, _x7, _x8) {\n  return _updateItem.apply(this, arguments);\n}\nfunction _updateItem() {\n  _updateItem = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(itemId, filename,\n  // should be fast-json-patch Operation, but I can't destructure on import\n  itemPatch) {\n    var items, foundItems, updatedData;\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return getJSONfromFile(filename);\n          case 3:\n            items = _context4.sent;\n            // find the item\n            foundItems = items.filter(function (item) {\n              return item.id === itemId;\n            });\n            if (!(foundItems.length !== 1)) {\n              _context4.next = 7;\n              break;\n            }\n            throw new Error(\"Could not find item with id \".concat(itemId));\n          case 7:\n            // apply the patch\n            updatedData = applyPatch(foundItems[0], itemPatch).newDocument; // write the new item data. Note: this whole function is horribly inefficient and\n            // would be much improved with a real db.\n            items.forEach(function (item, i) {\n              if (item.id === itemId) {\n                items[i] = updatedData;\n              }\n            });\n            _context4.next = 11;\n            return writeJSONToFile(filename, items);\n          case 11:\n            return _context4.abrupt(\"return\", updatedData);\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](0);\n            throw new Error(\"Could not delete item id \".concat(itemId, \" from \").concat(filename, \": \").concat(_context4.t0));\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 14]]);\n  }));\n  return _updateItem.apply(this, arguments);\n}\nfunction getAppointments() {\n  return _getAppointments.apply(this, arguments);\n}\nfunction _getAppointments() {\n  _getAppointments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", getJSONfromFile(filenames.appointments));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getAppointments.apply(this, arguments);\n}\nfunction getAppointmentsByMonthYear(_x9, _x10) {\n  return _getAppointmentsByMonthYear.apply(this, arguments);\n}\nfunction _getAppointmentsByMonthYear() {\n  _getAppointmentsByMonthYear = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(month, year) {\n    var appointmentDateMap, allAppointments;\n    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            // yet another place where inefficiency is ridiculous compared to a real db\n            appointmentDateMap = {};\n            _context6.next = 3;\n            return getAppointments();\n          case 3:\n            allAppointments = _context6.sent;\n            // filter data and massage into format expected by client\n            allAppointments.forEach(function (appointment) {\n              var appointmentDate = (0, _dayjs[\"default\"])(appointment.dateTime);\n              if (\n              // zero-indexed month\n              appointmentDate.month() + 1 === Number(month) && appointmentDate.year() === Number(year)) {\n                var dayNum = (0, _dayjs[\"default\"])(appointment.dateTime).date();\n                if (appointmentDateMap[dayNum]) {\n                  appointmentDateMap[dayNum].push(appointment);\n                } else {\n                  appointmentDateMap[dayNum] = [appointment];\n                }\n              }\n            });\n            return _context6.abrupt(\"return\", appointmentDateMap);\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getAppointmentsByMonthYear.apply(this, arguments);\n}\nfunction getTreatments() {\n  return _getTreatments.apply(this, arguments);\n}\nfunction _getTreatments() {\n  _getTreatments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7() {\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", getJSONfromFile(filenames.treatments));\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getTreatments.apply(this, arguments);\n}\nfunction getStaff() {\n  return _getStaff.apply(this, arguments);\n}\nfunction _getStaff() {\n  _getStaff = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", getJSONfromFile(filenames.staff));\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _getStaff.apply(this, arguments);\n}\nfunction getUsers() {\n  return getJSONfromFile(filenames.users);\n}\nfunction getUserById(_x11) {\n  return _getUserById.apply(this, arguments);\n}\n/* ****** Add new user ***** */\nfunction _getUserById() {\n  _getUserById = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(userId) {\n    var users, userData;\n    return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return getUsers();\n          case 2:\n            users = _context9.sent;\n            userData = users.filter(function (u) {\n              return u.id === userId;\n            });\n            if (!(userData.length < 1)) {\n              _context9.next = 6;\n              break;\n            }\n            throw new Error('user not found');\n          case 6:\n            if (!(userData.length < 1)) {\n              _context9.next = 8;\n              break;\n            }\n            throw new Error('duplicate user found');\n          case 8:\n            return _context9.abrupt(\"return\", userData[0]);\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getUserById.apply(this, arguments);\n}\nfunction addUser(_x12) {\n  return _addUser.apply(this, arguments);\n}\n/* ****** Add new appoinment ***** */\nfunction _addUser() {\n  _addUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(newUserData) {\n    var users, ids, maxId, newUserId, newUser;\n    return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return getUsers();\n          case 2:\n            users = _context10.sent;\n            // get the max id from the existing ids\n            ids = Object.values(users).map(function (u) {\n              return u.id;\n            });\n            maxId = ids.reduce(function (tempMaxId, itemId) {\n              return itemId > tempMaxId ? itemId : tempMaxId;\n            }, 0); // the new user will have an id of the max id plus 1\n            newUserId = maxId + 1;\n            newUser = _objectSpread(_objectSpread({}, newUserData), {}, {\n              id: newUserId\n            });\n            _context10.next = 9;\n            return writeJSONToFile(filenames.users, [].concat((0, _toConsumableArray2[\"default\"])(users), [newUser]));\n          case 9:\n            return _context10.abrupt(\"return\", newUser);\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _addUser.apply(this, arguments);\n}\nfunction writeAppointments(_x13) {\n  return _writeAppointments.apply(this, arguments);\n}\nfunction _writeAppointments() {\n  _writeAppointments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(newAppointmentsArray) {\n    return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return writeJSONToFile(filenames.appointments, newAppointmentsArray);\n          case 2:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _writeAppointments.apply(this, arguments);\n}\nvar _default = {\n  filenames: filenames,\n  writeAppointments: writeAppointments,\n  addUser: addUser,\n  deleteItem: deleteItem,\n  updateItem: updateItem,\n  getUsers: getUsers,\n  getUserById: getUserById,\n  getAppointments: getAppointments,\n  getAppointmentsByMonthYear: getAppointmentsByMonthYear,\n  getStaff: getStaff,\n  getTreatments: getTreatments\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "_dayjs",
        "_interopRequireDefault",
        "require",
        "_fastJsonPatch",
        "_fs",
        "_path",
        "ownKeys",
        "object",
        "enumerableOnly",
        "keys",
        "Object",
        "getOwnPropertySymbols",
        "symbols",
        "filter",
        "sym",
        "getOwnPropertyDescriptor",
        "enumerable",
        "push",
        "apply",
        "_objectSpread",
        "target",
        "i",
        "arguments",
        "length",
        "source",
        "forEach",
        "key",
        "_defineProperty2",
        "getOwnPropertyDescriptors",
        "defineProperties",
        "defineProperty",
        "dbPath",
        "filenames",
        "exports",
        "getJSONfromFile",
        "_x",
        "_getJSONfromFile",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "filename",
        "filePath",
        "data",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "path",
        "join",
        "fs",
        "readFile",
        "sent",
        "abrupt",
        "JSON",
        "parse",
        "toString",
        "stop",
        "writeJSONToFile",
        "_x2",
        "_x3",
        "_writeJSONToFile",
        "_callee2",
        "jsonData",
        "_callee2$",
        "_context2",
        "stringify",
        "writeFile",
        "flag",
        "deleteItem",
        "_x4",
        "_x5",
        "_deleteItem",
        "_callee3",
        "itemId",
        "items",
        "foundItemArray",
        "updatedItems",
        "_callee3$",
        "_context3",
        "id",
        "Error",
        "concat",
        "t0",
        "applyPatch",
        "jsonPatch",
        "updateItem",
        "_x6",
        "_x7",
        "_x8",
        "_updateItem",
        "_callee4",
        "itemPatch",
        "foundItems",
        "updatedData",
        "_callee4$",
        "_context4",
        "item",
        "newDocument",
        "getAppointments",
        "_getAppointments",
        "_callee5",
        "_callee5$",
        "_context5",
        "appointments",
        "getAppointmentsByMonthYear",
        "_x9",
        "_x10",
        "_getAppointmentsByMonthYear",
        "_callee6",
        "month",
        "year",
        "appointmentDateMap",
        "allAppointments",
        "_callee6$",
        "_context6",
        "appointment",
        "appointmentDate",
        "dayjs",
        "dateTime",
        "Number",
        "dayNum",
        "date",
        "getTreatments",
        "_getTreatments",
        "_callee7",
        "_callee7$",
        "_context7",
        "treatments",
        "getStaff",
        "_getStaff",
        "_callee8",
        "_callee8$",
        "_context8",
        "staff",
        "getUsers",
        "users",
        "getUserById",
        "_x11",
        "_getUserById",
        "_callee9",
        "userId",
        "userData",
        "_callee9$",
        "_context9",
        "u",
        "addUser",
        "_x12",
        "_addUser",
        "_callee10",
        "newUserData",
        "ids",
        "maxId",
        "newUserId",
        "newUser",
        "_callee10$",
        "_context10",
        "values",
        "map",
        "reduce",
        "tempMaxId",
        "_toConsumableArray2",
        "writeAppointments",
        "_x13",
        "_writeAppointments",
        "_callee11",
        "newAppointmentsArray",
        "_callee11$",
        "_context11",
        "_default"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "sources": [
        "index.ts"
      ],
      "sourcesContent": [
        "// NOTE: in production this would connect to a database,\n// not JSON files. However, I didn't want to make you install\n// a particular database in order to use this app.\n//\n// This \"database\" is horribly inefficient and will be a problem\n// when Lazy Days Spa opens to hundreds of locations globally.\nimport dayjs from 'dayjs';\nimport jsonPatch, { Operation } from 'fast-json-patch';\nimport { promises as fs } from 'fs';\nimport path from 'path';\n\nimport {\n  Appointment,\n  AppointmentDateMap,\n  Staff,\n  Treatment,\n} from '../../../shared/types';\nimport { AuthUser, NewAuthUser } from '../auth';\n\ntype JsonDataType = AuthUser | Appointment | Treatment | Staff;\n\nconst dbPath = 'db';\nexport enum filenames {\n  users = 'users.json',\n  appointments = 'appointments.json',\n  treatments = 'treatments.json',\n  staff = 'staff.json',\n}\n\n/* ****** Read from file ***** */\nasync function getJSONfromFile<ItemType extends JsonDataType>(\n  filename: filenames,\n): Promise<ItemType[]> {\n  const filePath = path.join(dbPath, filename);\n  const data = await fs.readFile(filePath);\n  return JSON.parse(data.toString());\n}\n\n/* ****** Write to file ***** */\nasync function writeJSONToFile<T extends JsonDataType>(\n  filename: filenames,\n  data: Array<T>,\n): Promise<void> {\n  const filePath = path.join(dbPath, filename);\n  const jsonData = JSON.stringify(data);\n  await fs.writeFile(filePath, jsonData, { flag: 'w' });\n}\n\n/* ****** Delete item ***** */\nasync function deleteItem<T extends JsonDataType>(\n  filename: filenames,\n  itemId: number,\n): Promise<number> {\n  try {\n    const items = await getJSONfromFile<T>(filename);\n    const foundItemArray = items.filter((i) => i.id === itemId);\n    if (foundItemArray.length !== 1) {\n      throw new Error(`Could not find item id ${itemId} in ${filename}`);\n    }\n    const updatedItems = items.filter((i) => i.id !== itemId);\n    await writeJSONToFile(filename, updatedItems);\n    return itemId;\n  } catch (e) {\n    throw new Error(\n      `Could not delete item id ${itemId} from ${filename}: ${e}`,\n    );\n  }\n}\n\n/* ****** Update item ***** */\nconst { applyPatch } = jsonPatch;\n// eslint-disable-next-line max-lines-per-function\nasync function updateItem<DataType extends JsonDataType>(\n  itemId: number,\n  filename: filenames,\n  // should be fast-json-patch Operation, but I can't destructure on import\n  itemPatch: Operation[],\n): Promise<DataType> {\n  try {\n    const items = await getJSONfromFile<DataType>(filename);\n\n    // find the item\n    const foundItems = items.filter((item) => item.id === itemId);\n    if (foundItems.length !== 1) {\n      throw new Error(`Could not find item with id ${itemId}`);\n    }\n\n    // apply the patch\n    const updatedData = applyPatch(foundItems[0], itemPatch).newDocument;\n\n    // write the new item data. Note: this whole function is horribly inefficient and\n    // would be much improved with a real db.\n    items.forEach((item, i) => {\n      if (item.id === itemId) {\n        items[i] = updatedData;\n      }\n    });\n\n    await writeJSONToFile(filename, items);\n    return updatedData;\n  } catch (e) {\n    throw new Error(\n      `Could not delete item id ${itemId} from ${filename}: ${e}`,\n    );\n  }\n}\n\nexport async function getAppointments(): Promise<Appointment[]> {\n  return getJSONfromFile<Appointment>(filenames.appointments);\n}\n\nexport async function getAppointmentsByMonthYear(\n  month: string,\n  year: string,\n): Promise<AppointmentDateMap> {\n  // yet another place where inefficiency is ridiculous compared to a real db\n  const appointmentDateMap: AppointmentDateMap = {};\n  const allAppointments = await getAppointments();\n\n  // filter data and massage into format expected by client\n  allAppointments.forEach((appointment) => {\n    const appointmentDate = dayjs(appointment.dateTime);\n    if (\n      // zero-indexed month\n      appointmentDate.month() + 1 === Number(month) &&\n      appointmentDate.year() === Number(year)\n    ) {\n      const dayNum = dayjs(appointment.dateTime).date();\n      if (appointmentDateMap[dayNum]) {\n        appointmentDateMap[dayNum].push(appointment);\n      } else {\n        appointmentDateMap[dayNum] = [appointment];\n      }\n    }\n  });\n  return appointmentDateMap;\n}\n\nexport async function getTreatments(): Promise<Treatment[]> {\n  return getJSONfromFile<Treatment>(filenames.treatments);\n}\n\nexport async function getStaff(): Promise<Staff[]> {\n  return getJSONfromFile<Staff>(filenames.staff);\n}\n\nexport function getUsers(): Promise<AuthUser[]> {\n  return getJSONfromFile<AuthUser>(filenames.users);\n}\n\nexport async function getUserById(userId: number): Promise<AuthUser> {\n  const users = await getUsers();\n  const userData = users.filter((u) => u.id === userId);\n  if (userData.length < 1) throw new Error('user not found');\n  if (userData.length < 1) throw new Error('duplicate user found');\n  return userData[0];\n}\n\n/* ****** Add new user ***** */\nasync function addUser(newUserData: NewAuthUser): Promise<AuthUser> {\n  const users = await getUsers();\n\n  // get the max id from the existing ids\n  const ids: number[] = Object.values(users).map((u) => u.id);\n  const maxId = ids.reduce((tempMaxId: number, itemId: number) => {\n    return itemId > tempMaxId ? itemId : tempMaxId;\n  }, 0);\n\n  // the new user will have an id of the max id plus 1\n  const newUserId = maxId + 1;\n\n  const newUser = { ...newUserData, id: newUserId };\n  await writeJSONToFile(filenames.users, [...users, newUser]);\n  return newUser;\n}\n\n/* ****** Add new appoinment ***** */\nasync function writeAppointments(\n  newAppointmentsArray: Appointment[],\n): Promise<void> {\n  await writeJSONToFile(filenames.appointments, newAppointmentsArray);\n}\n\nexport default {\n  filenames,\n  writeAppointments,\n  addUser,\n  deleteItem,\n  updateItem,\n  getUsers,\n  getUserById,\n  getAppointments,\n  getAppointmentsByMonthYear,\n  getStaff,\n  getTreatments,\n};\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/",
        "sourceFileName": "index.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateUser = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dbFunc = _interopRequireDefault(require(\"../db-func\"));\n// middleware for validating user\n// eslint-disable-next-line consistent-return\nvar validateUser = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n    var _req$auth, requestedId;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            // check that the token matches the id url param (decoded token resides in req.user)\n            requestedId = Number(req.params.id);\n            if (!(((_req$auth = req.auth) === null || _req$auth === void 0 ? void 0 : _req$auth.id) !== requestedId)) {\n              _context.next = 6;\n              break;\n            }\n            res.status(401).send();\n            _context.next = 9;\n            break;\n          case 6:\n            _context.next = 8;\n            return _dbFunc[\"default\"].getUserById(requestedId);\n          case 8:\n            next();\n          case 9:\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            next(_context.t0);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n  return function validateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.validateUser = validateUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGJGdW5jIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJ2YWxpZGF0ZVVzZXIiLCJfcmVmIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiX3JlZ2VuZXJhdG9yIiwibWFyayIsIl9jYWxsZWUiLCJyZXEiLCJyZXMiLCJuZXh0IiwiX3JlcSRhdXRoIiwicmVxdWVzdGVkSWQiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJOdW1iZXIiLCJwYXJhbXMiLCJpZCIsImF1dGgiLCJzdGF0dXMiLCJzZW5kIiwiZGIiLCJnZXRVc2VyQnlJZCIsInQwIiwic3RvcCIsIl94IiwiX3gyIiwiX3gzIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvVm9sdW1lcy9maWZpL1JFQUNUL1JlYWN0X1F1ZXJ5L1JFQUNULVFVRVJZLVN0YXJ0ZXItZmlsZXMvYmFzZS1sYXp5LWRheXMvc2VydmVyL3NyYy9taWRkbGV3YXJlcy8iLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRGdW5jdGlvbiwgUmVxdWVzdCwgUmVxdWVzdEhhbmRsZXIgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IFBhcmFtc0RpY3Rpb25hcnkgfSBmcm9tICdleHByZXNzLXNlcnZlLXN0YXRpYy1jb3JlJztcbmltcG9ydCB7IE9wZXJhdGlvbiB9IGZyb20gJ2Zhc3QtanNvbi1wYXRjaCc7XG5cbmltcG9ydCBkYiBmcm9tICcuLi9kYi1mdW5jJztcblxuZXhwb3J0IGludGVyZmFjZSBpZFBhcmFtc0ludGVyZmFjZSBleHRlbmRzIFBhcmFtc0RpY3Rpb25hcnkge1xuICBpZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc3BvbnNlV2l0aE1lc3NhZ2Uge1xuICBtZXNzYWdlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGF0Y2hSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG4gIHBhdGNoPzogT3BlcmF0aW9uW107XG59XG5cbmV4cG9ydCB0eXBlIEF1dGhSZXF1ZXN0ID0gUmVxdWVzdDxcbiAgaWRQYXJhbXNJbnRlcmZhY2UsXG4gIFJlc3BvbnNlV2l0aE1lc3NhZ2UsXG4gIFBhdGNoUmVxdWVzdCxcbiAgcXMuUGFyc2VkUXMsXG4gIE5leHRGdW5jdGlvblxuPjtcblxuLy8gbWlkZGxld2FyZSBmb3IgdmFsaWRhdGluZyB1c2VyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVVzZXI6IFJlcXVlc3RIYW5kbGVyPFxuICBpZFBhcmFtc0ludGVyZmFjZSxcbiAgUmVzcG9uc2VXaXRoTWVzc2FnZSxcbiAgUGF0Y2hSZXF1ZXN0LFxuICBxcy5QYXJzZWRRcyxcbiAgTmV4dEZ1bmN0aW9uXG4+ID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gY2hlY2sgdGhhdCB0aGUgdG9rZW4gbWF0Y2hlcyB0aGUgaWQgdXJsIHBhcmFtIChkZWNvZGVkIHRva2VuIHJlc2lkZXMgaW4gcmVxLnVzZXIpXG4gICAgY29uc3QgcmVxdWVzdGVkSWQgPSBOdW1iZXIocmVxLnBhcmFtcy5pZCk7XG4gICAgaWYgKHJlcS5hdXRoPy5pZCAhPT0gcmVxdWVzdGVkSWQpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGZpbmQgdGhlIHVzZXI7IHdpbGwgdGhyb3cgZXJyb3IgaWYgdXNlciBkb2Vzbid0IGV4aXN0XG4gICAgICBhd2FpdCBkYi5nZXRVc2VyQnlJZChyZXF1ZXN0ZWRJZCk7XG4gICAgICBuZXh0KCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIG5leHQoZXJyb3IpO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFzQkE7QUFDQTtBQUNPLElBQU1DLFlBTVo7RUFBQSxJQUFBQyxJQUFBLE9BQUFDLGtCQUFBLDJCQUFBQyxZQUFBLFlBQUFDLElBQUEsQ0FBRyxTQUFBQyxRQUFPQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSTtJQUFBLElBQUFDLFNBQUEsRUFBQUMsV0FBQTtJQUFBLE9BQUFQLFlBQUEsWUFBQVEsSUFBQSxVQUFBQyxTQUFBQyxRQUFBO01BQUE7UUFBQSxRQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBTCxJQUFBO1VBQUE7WUFBQUssUUFBQSxDQUFBQyxJQUFBO1lBRXJCO1lBQ01KLFdBQVcsR0FBR0ssTUFBTSxDQUFDVCxHQUFHLENBQUNVLE1BQU0sQ0FBQ0MsRUFBRSxDQUFDO1lBQUEsTUFDckMsRUFBQVIsU0FBQSxHQUFBSCxHQUFHLENBQUNZLElBQUksY0FBQVQsU0FBQSx1QkFBUkEsU0FBQSxDQUFVUSxFQUFFLE1BQUtQLFdBQVc7Y0FBQUcsUUFBQSxDQUFBTCxJQUFBO2NBQUE7WUFBQTtZQUM5QkQsR0FBRyxDQUFDWSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyxDQUFDO1lBQUNQLFFBQUEsQ0FBQUwsSUFBQTtZQUFBO1VBQUE7WUFBQUssUUFBQSxDQUFBTCxJQUFBO1lBQUEsT0FHakJhLGtCQUFFLENBQUNDLFdBQVcsQ0FBQ1osV0FBVyxDQUFDO1VBQUE7WUFDakNGLElBQUksQ0FBQyxDQUFDO1VBQUM7WUFBQUssUUFBQSxDQUFBTCxJQUFBO1lBQUE7VUFBQTtZQUFBSyxRQUFBLENBQUFDLElBQUE7WUFBQUQsUUFBQSxDQUFBVSxFQUFBLEdBQUFWLFFBQUE7WUFHVEwsSUFBSSxDQUFBSyxRQUFBLENBQUFVLEVBQU0sQ0FBQztVQUFDO1VBQUE7WUFBQSxPQUFBVixRQUFBLENBQUFXLElBQUE7UUFBQTtNQUFBO0lBQUEsR0FBQW5CLE9BQUE7RUFBQSxDQUVmO0VBQUEsZ0JBcEJZTCxZQU1aQSxDQUFBeUIsRUFBQSxFQUFBQyxHQUFBLEVBQUFDLEdBQUE7SUFBQSxPQUFBMUIsSUFBQSxDQUFBMkIsS0FBQSxPQUFBQyxTQUFBO0VBQUE7QUFBQSxHQWNBO0FBQUNDLE9BQUEsQ0FBQTlCLFlBQUEsR0FBQUEsWUFBQSJ9",
    "map": {
      "version": 3,
      "names": [
        "_dbFunc",
        "_interopRequireDefault",
        "require",
        "validateUser",
        "_ref",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "req",
        "res",
        "next",
        "_req$auth",
        "requestedId",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "Number",
        "params",
        "id",
        "auth",
        "status",
        "send",
        "db",
        "getUserById",
        "t0",
        "stop",
        "_x",
        "_x2",
        "_x3",
        "apply",
        "arguments",
        "exports"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/",
      "sources": [
        "index.ts"
      ],
      "sourcesContent": [
        "import { NextFunction, Request, RequestHandler } from 'express';\nimport { ParamsDictionary } from 'express-serve-static-core';\nimport { Operation } from 'fast-json-patch';\n\nimport db from '../db-func';\n\nexport interface idParamsInterface extends ParamsDictionary {\n  id: string;\n}\n\nexport interface ResponseWithMessage {\n  message: string;\n}\n\nexport interface PatchRequest extends Request {\n  patch?: Operation[];\n}\n\nexport type AuthRequest = Request<\n  idParamsInterface,\n  ResponseWithMessage,\n  PatchRequest,\n  qs.ParsedQs,\n  NextFunction\n>;\n\n// middleware for validating user\n// eslint-disable-next-line consistent-return\nexport const validateUser: RequestHandler<\n  idParamsInterface,\n  ResponseWithMessage,\n  PatchRequest,\n  qs.ParsedQs,\n  NextFunction\n> = async (req, res, next) => {\n  try {\n    // check that the token matches the id url param (decoded token resides in req.user)\n    const requestedId = Number(req.params.id);\n    if (req.auth?.id !== requestedId) {\n      res.status(401).send();\n    } else {\n      // find the user; will throw error if user doesn't exist\n      await db.getUserById(requestedId);\n      next();\n    }\n  } catch (error) {\n    next(error);\n  }\n};\n"
      ],
      "mappings": ";;;;;;;;;AAIA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAsBA;AACA;AACO,IAAMC,YAMZ;EAAA,IAAAC,IAAA,OAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI;IAAA,IAAAC,SAAA,EAAAC,WAAA;IAAA,OAAAP,YAAA,YAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAL,IAAA;UAAA;YAAAK,QAAA,CAAAC,IAAA;YAErB;YACMJ,WAAW,GAAGK,MAAM,CAACT,GAAG,CAACU,MAAM,CAACC,EAAE,CAAC;YAAA,MACrC,EAAAR,SAAA,GAAAH,GAAG,CAACY,IAAI,cAAAT,SAAA,uBAARA,SAAA,CAAUQ,EAAE,MAAKP,WAAW;cAAAG,QAAA,CAAAL,IAAA;cAAA;YAAA;YAC9BD,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC;YAACP,QAAA,CAAAL,IAAA;YAAA;UAAA;YAAAK,QAAA,CAAAL,IAAA;YAAA,OAGjBa,kBAAE,CAACC,WAAW,CAACZ,WAAW,CAAC;UAAA;YACjCF,IAAI,CAAC,CAAC;UAAC;YAAAK,QAAA,CAAAL,IAAA;YAAA;UAAA;YAAAK,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;YAGTL,IAAI,CAAAK,QAAA,CAAAU,EAAM,CAAC;UAAC;UAAA;YAAA,OAAAV,QAAA,CAAAW,IAAA;QAAA;MAAA;IAAA,GAAAnB,OAAA;EAAA,CAEf;EAAA,gBApBYL,YAMZA,CAAAyB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAcA;AAACC,OAAA,CAAA9B,YAAA,GAAAA,YAAA"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
        "sourceFileName": "appointment.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.get = get;\nexports.update = update;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dbFunc = _interopRequireDefault(require(\"../db-func\"));\n// month and year are required arguments\nfunction get(_x, _x2) {\n  return _get.apply(this, arguments);\n}\nfunction _get() {\n  _get = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n    var _req$params, month, year, appointments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$params = req.params, month = _req$params.month, year = _req$params.year;\n            if (!(!month || !year)) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", res.status(400).json({\n              message: 'month and year are required to get appointments'\n            }));\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _dbFunc[\"default\"].getAppointmentsByMonthYear(month, year);\n          case 6:\n            appointments = _context.sent;\n            return _context.abrupt(\"return\", res.status(200).json(appointments));\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: \"could not get appointments for \".concat(month, \" / \").concat(year, \": \").concat(_context.t0)\n            }));\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n  return _get.apply(this, arguments);\n}\nfunction update(_x3, _x4) {\n  return _update.apply(this, arguments);\n}\nfunction _update() {\n  _update = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n    var id, patch, updatedAppointment;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            id = req.params.id;\n            patch = req.body.data;\n            _context2.next = 5;\n            return _dbFunc[\"default\"].updateItem(Number(id), _dbFunc[\"default\"].filenames.appointments, patch);\n          case 5:\n            updatedAppointment = _context2.sent;\n            return _context2.abrupt(\"return\", res.status(200).json({\n              appointment: updatedAppointment\n            }));\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: \"could not update appointment: \".concat(_context2.t0)\n            }));\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n  return _update.apply(this, arguments);\n}\nvar _default = {\n  get: get,\n  update: update\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGJGdW5jIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJnZXQiLCJfeCIsIl94MiIsIl9nZXQiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9yZWdlbmVyYXRvciIsIm1hcmsiLCJfY2FsbGVlIiwicmVxIiwicmVzIiwiX3JlcSRwYXJhbXMiLCJtb250aCIsInllYXIiLCJhcHBvaW50bWVudHMiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwicGFyYW1zIiwiYWJydXB0Iiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJkYiIsImdldEFwcG9pbnRtZW50c0J5TW9udGhZZWFyIiwic2VudCIsInQwIiwiY29uY2F0Iiwic3RvcCIsInVwZGF0ZSIsIl94MyIsIl94NCIsIl91cGRhdGUiLCJfY2FsbGVlMiIsImlkIiwicGF0Y2giLCJ1cGRhdGVkQXBwb2ludG1lbnQiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJib2R5IiwiZGF0YSIsInVwZGF0ZUl0ZW0iLCJOdW1iZXIiLCJmaWxlbmFtZXMiLCJhcHBvaW50bWVudCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL1ZvbHVtZXMvZmlmaS9SRUFDVC9SZWFjdF9RdWVyeS9SRUFDVC1RVUVSWS1TdGFydGVyLWZpbGVzL2Jhc2UtbGF6eS1kYXlzL3NlcnZlci9zcmMvcm91dGUtbWV0aG9kcy8iLCJzb3VyY2VzIjpbImFwcG9pbnRtZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB7IEFwcG9pbnRtZW50IH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL3R5cGVzJztcbmltcG9ydCBkYiBmcm9tICcuLi9kYi1mdW5jJztcblxuLy8gbW9udGggYW5kIHllYXIgYXJlIHJlcXVpcmVkIGFyZ3VtZW50c1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIGNvbnN0IHsgbW9udGgsIHllYXIgfSA9IHJlcS5wYXJhbXM7XG4gIGlmICghbW9udGggfHwgIXllYXIpIHtcbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKDQwMClcbiAgICAgIC5qc29uKHsgbWVzc2FnZTogJ21vbnRoIGFuZCB5ZWFyIGFyZSByZXF1aXJlZCB0byBnZXQgYXBwb2ludG1lbnRzJyB9KTtcbiAgfVxuICB0cnkge1xuICAgIGNvbnN0IGFwcG9pbnRtZW50cyA9IGF3YWl0IGRiLmdldEFwcG9pbnRtZW50c0J5TW9udGhZZWFyKG1vbnRoLCB5ZWFyKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oYXBwb2ludG1lbnRzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBtZXNzYWdlOiBgY291bGQgbm90IGdldCBhcHBvaW50bWVudHMgZm9yICR7bW9udGh9IC8gJHt5ZWFyfTogJHtlfWAsXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZShyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcbiAgICBjb25zdCBwYXRjaCA9IHJlcS5ib2R5LmRhdGE7XG4gICAgY29uc3QgdXBkYXRlZEFwcG9pbnRtZW50ID0gYXdhaXQgZGIudXBkYXRlSXRlbTxBcHBvaW50bWVudD4oXG4gICAgICBOdW1iZXIoaWQpLFxuICAgICAgZGIuZmlsZW5hbWVzLmFwcG9pbnRtZW50cyxcbiAgICAgIHBhdGNoLFxuICAgICk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgYXBwb2ludG1lbnQ6IHVwZGF0ZWRBcHBvaW50bWVudCB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXNcbiAgICAgIC5zdGF0dXMoNTAwKVxuICAgICAgLmpzb24oeyBtZXNzYWdlOiBgY291bGQgbm90IHVwZGF0ZSBhcHBvaW50bWVudDogJHtlfWAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXQsXG4gIHVwZGF0ZSxcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBR0EsSUFBQUEsT0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBRUE7QUFBQSxTQUNzQkMsR0FBR0EsQ0FBQUMsRUFBQSxFQUFBQyxHQUFBO0VBQUEsT0FBQUMsSUFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBQUFGLEtBQUE7RUFBQUEsSUFBQSxPQUFBRyxrQkFBQSwyQkFBQUMsWUFBQSxZQUFBQyxJQUFBLENBQWxCLFNBQUFDLFFBQW1CQyxHQUFZLEVBQUVDLEdBQWE7SUFBQSxJQUFBQyxXQUFBLEVBQUFDLEtBQUEsRUFBQUMsSUFBQSxFQUFBQyxZQUFBO0lBQUEsT0FBQVIsWUFBQSxZQUFBUyxJQUFBLFVBQUFDLFNBQUFDLFFBQUE7TUFBQTtRQUFBLFFBQUFBLFFBQUEsQ0FBQUMsSUFBQSxHQUFBRCxRQUFBLENBQUFFLElBQUE7VUFBQTtZQUFBUixXQUFBLEdBQzNCRixHQUFHLENBQUNXLE1BQU0sRUFBMUJSLEtBQUssR0FBQUQsV0FBQSxDQUFMQyxLQUFLLEVBQUVDLElBQUksR0FBQUYsV0FBQSxDQUFKRSxJQUFJO1lBQUEsTUFDZixDQUFDRCxLQUFLLElBQUksQ0FBQ0MsSUFBSTtjQUFBSSxRQUFBLENBQUFFLElBQUE7Y0FBQTtZQUFBO1lBQUEsT0FBQUYsUUFBQSxDQUFBSSxNQUFBLFdBQ1ZYLEdBQUcsQ0FDUFksTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUNYQyxJQUFJLENBQUM7Y0FBRUMsT0FBTyxFQUFFO1lBQWtELENBQUMsQ0FBQztVQUFBO1lBQUFQLFFBQUEsQ0FBQUMsSUFBQTtZQUFBRCxRQUFBLENBQUFFLElBQUE7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",
    "map": {
      "version": 3,
      "names": [
        "_dbFunc",
        "_interopRequireDefault",
        "require",
        "get",
        "_x",
        "_x2",
        "_get",
        "apply",
        "arguments",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "req",
        "res",
        "_req$params",
        "month",
        "year",
        "appointments",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "params",
        "abrupt",
        "status",
        "json",
        "message",
        "db",
        "getAppointmentsByMonthYear",
        "sent",
        "t0",
        "concat",
        "stop",
        "update",
        "_x3",
        "_x4",
        "_update",
        "_callee2",
        "id",
        "patch",
        "updatedAppointment",
        "_callee2$",
        "_context2",
        "body",
        "data",
        "updateItem",
        "Number",
        "filenames",
        "appointment",
        "_default",
        "exports"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "sources": [
        "appointment.ts"
      ],
      "sourcesContent": [
        "import { Request, Response } from 'express';\n\nimport { Appointment } from '../../../shared/types';\nimport db from '../db-func';\n\n// month and year are required arguments\nexport async function get(req: Request, res: Response): Promise<Response> {\n  const { month, year } = req.params;\n  if (!month || !year) {\n    return res\n      .status(400)\n      .json({ message: 'month and year are required to get appointments' });\n  }\n  try {\n    const appointments = await db.getAppointmentsByMonthYear(month, year);\n    return res.status(200).json(appointments);\n  } catch (e) {\n    return res.status(500).json({\n      message: `could not get appointments for ${month} / ${year}: ${e}`,\n    });\n  }\n}\n\nexport async function update(req: Request, res: Response): Promise<Response> {\n  try {\n    const { id } = req.params;\n    const patch = req.body.data;\n    const updatedAppointment = await db.updateItem<Appointment>(\n      Number(id),\n      db.filenames.appointments,\n      patch,\n    );\n    return res.status(200).json({ appointment: updatedAppointment });\n  } catch (e) {\n    return res\n      .status(500)\n      .json({ message: `could not update appointment: ${e}` });\n  }\n}\n\nexport default {\n  get,\n  update,\n};\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/staff.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/staff.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/staff.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/staff.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
        "sourceFileName": "staff.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.get = get;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dbFunc = _interopRequireDefault(require(\"../db-func\"));\nfunction get(_x, _x2) {\n  return _get.apply(this, arguments);\n}\nfunction _get() {\n  _get = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n    var staff;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _dbFunc[\"default\"].getStaff();\n          case 3:\n            staff = _context.sent;\n            return _context.abrupt(\"return\", res.status(200).json(staff));\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: \"could not get staff: \".concat(_context.t0)\n            }));\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _get.apply(this, arguments);\n}\nvar _default = {\n  get: get\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGJGdW5jIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJnZXQiLCJfeCIsIl94MiIsIl9nZXQiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9yZWdlbmVyYXRvciIsIm1hcmsiLCJfY2FsbGVlIiwicmVxIiwicmVzIiwic3RhZmYiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwiZGIiLCJnZXRTdGFmZiIsInNlbnQiLCJhYnJ1cHQiLCJzdGF0dXMiLCJqc29uIiwidDAiLCJtZXNzYWdlIiwiY29uY2F0Iiwic3RvcCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL1ZvbHVtZXMvZmlmaS9SRUFDVC9SZWFjdF9RdWVyeS9SRUFDVC1RVUVSWS1TdGFydGVyLWZpbGVzL2Jhc2UtbGF6eS1kYXlzL3NlcnZlci9zcmMvcm91dGUtbWV0aG9kcy8iLCJzb3VyY2VzIjpbInN0YWZmLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCBkYiBmcm9tICcuLi9kYi1mdW5jJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc3RhZmYgPSBhd2FpdCBkYi5nZXRTdGFmZigpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihzdGFmZik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBgY291bGQgbm90IGdldCBzdGFmZjogJHtlfWAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXQsXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRUEsSUFBQUEsT0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQTRCLFNBRU5DLEdBQUdBLENBQUFDLEVBQUEsRUFBQUMsR0FBQTtFQUFBLE9BQUFDLElBQUEsQ0FBQUMsS0FBQSxPQUFBQyxTQUFBO0FBQUE7QUFBQSxTQUFBRixLQUFBO0VBQUFBLElBQUEsT0FBQUcsa0JBQUEsMkJBQUFDLFlBQUEsWUFBQUMsSUFBQSxDQUFsQixTQUFBQyxRQUFtQkMsR0FBWSxFQUFFQyxHQUFhO0lBQUEsSUFBQUMsS0FBQTtJQUFBLE9BQUFMLFlBQUEsWUFBQU0sSUFBQSxVQUFBQyxTQUFBQyxRQUFBO01BQUE7UUFBQSxRQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBRSxJQUFBO1VBQUE7WUFBQUYsUUFBQSxDQUFBQyxJQUFBO1lBQUFELFFBQUEsQ0FBQUUsSUFBQTtZQUFBLE9BRTdCQyxrQkFBRSxDQUFDQyxRQUFRLENBQUMsQ0FBQztVQUFBO1lBQTNCUCxLQUFLLEdBQUFHLFFBQUEsQ0FBQUssSUFBQTtZQUFBLE9BQUFMLFFBQUEsQ0FBQU0sTUFBQSxXQUNKVixHQUFHLENBQUNXLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDWCxLQUFLLENBQUM7VUFBQTtZQUFBRyxRQUFBLENBQUFDLElBQUE7WUFBQUQsUUFBQSxDQUFBUyxFQUFBLEdBQUFULFFBQUE7WUFBQSxPQUFBQSxRQUFBLENBQUFNLE1BQUEsV0FFM0JWLEdBQUcsQ0FBQ1csTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7Y0FBRUUsT0FBTywwQkFBQUMsTUFBQSxDQUFBWCxRQUFBLENBQUFTLEVBQUE7WUFBOEIsQ0FBQyxDQUFDO1VBQUE7VUFBQTtZQUFBLE9BQUFULFFBQUEsQ0FBQVksSUFBQTtRQUFBO01BQUE7SUFBQSxHQUFBbEIsT0FBQTtFQUFBLENBRXhFO0VBQUEsT0FBQU4sSUFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLElBQUF1QixRQUFBLEdBRWM7RUFDYjVCLEdBQUcsRUFBSEE7QUFDRixDQUFDO0FBQUE2QixPQUFBLGNBQUFELFFBQUEifQ==",
    "map": {
      "version": 3,
      "names": [
        "_dbFunc",
        "_interopRequireDefault",
        "require",
        "get",
        "_x",
        "_x2",
        "_get",
        "apply",
        "arguments",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "req",
        "res",
        "staff",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "db",
        "getStaff",
        "sent",
        "abrupt",
        "status",
        "json",
        "t0",
        "message",
        "concat",
        "stop",
        "_default",
        "exports"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "sources": [
        "staff.ts"
      ],
      "sourcesContent": [
        "import { Request, Response } from 'express';\n\nimport db from '../db-func';\n\nexport async function get(req: Request, res: Response): Promise<Response> {\n  try {\n    const staff = await db.getStaff();\n    return res.status(200).json(staff);\n  } catch (e) {\n    return res.status(500).json({ message: `could not get staff: ${e}` });\n  }\n}\n\nexport default {\n  get,\n};\n"
      ],
      "mappings": ";;;;;;;;;;AAEA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4B,SAENC,GAAGA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,KAAA;EAAAA,IAAA,OAAAG,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAlB,SAAAC,QAAmBC,GAAY,EAAEC,GAAa;IAAA,IAAAC,KAAA;IAAA,OAAAL,YAAA,YAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAE7BC,kBAAE,CAACC,QAAQ,CAAC,CAAC;UAAA;YAA3BP,KAAK,GAAAG,QAAA,CAAAK,IAAA;YAAA,OAAAL,QAAA,CAAAM,MAAA,WACJV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACX,KAAK,CAAC;UAAA;YAAAG,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;YAAA,OAAAA,QAAA,CAAAM,MAAA,WAE3BV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEE,OAAO,0BAAAC,MAAA,CAAAX,QAAA,CAAAS,EAAA;YAA8B,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAT,QAAA,CAAAY,IAAA;QAAA;MAAA;IAAA,GAAAlB,OAAA;EAAA,CAExE;EAAA,OAAAN,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,IAAAuB,QAAA,GAEc;EACb5B,GAAG,EAAHA;AACF,CAAC;AAAA6B,OAAA,cAAAD,QAAA"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/treatment.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/treatment.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/treatment.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/treatment.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
        "sourceFileName": "treatment.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.get = get;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dbFunc = _interopRequireDefault(require(\"../db-func\"));\nfunction get(_x, _x2) {\n  return _get.apply(this, arguments);\n}\nfunction _get() {\n  _get = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n    var treatments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _dbFunc[\"default\"].getTreatments();\n          case 3:\n            treatments = _context.sent;\n            return _context.abrupt(\"return\", res.status(200).json(treatments));\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: \"could not get treatments: \".concat(_context.t0)\n            }));\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _get.apply(this, arguments);\n}\nvar _default = {\n  get: get\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGJGdW5jIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJnZXQiLCJfeCIsIl94MiIsIl9nZXQiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9yZWdlbmVyYXRvciIsIm1hcmsiLCJfY2FsbGVlIiwicmVxIiwicmVzIiwidHJlYXRtZW50cyIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJkYiIsImdldFRyZWF0bWVudHMiLCJzZW50IiwiYWJydXB0Iiwic3RhdHVzIiwianNvbiIsInQwIiwibWVzc2FnZSIsImNvbmNhdCIsInN0b3AiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9Wb2x1bWVzL2ZpZmkvUkVBQ1QvUmVhY3RfUXVlcnkvUkVBQ1QtUVVFUlktU3RhcnRlci1maWxlcy9iYXNlLWxhenktZGF5cy9zZXJ2ZXIvc3JjL3JvdXRlLW1ldGhvZHMvIiwic291cmNlcyI6WyJ0cmVhdG1lbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IGRiIGZyb20gJy4uL2RiLWZ1bmMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0KHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8UmVzcG9uc2U+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB0cmVhdG1lbnRzID0gYXdhaXQgZGIuZ2V0VHJlYXRtZW50cygpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih0cmVhdG1lbnRzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IGBjb3VsZCBub3QgZ2V0IHRyZWF0bWVudHM6ICR7ZX1gIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0LFxufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVBLElBQUFBLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUE0QixTQUVOQyxHQUFHQSxDQUFBQyxFQUFBLEVBQUFDLEdBQUE7RUFBQSxPQUFBQyxJQUFBLENBQUFDLEtBQUEsT0FBQUMsU0FBQTtBQUFBO0FBQUEsU0FBQUYsS0FBQTtFQUFBQSxJQUFBLE9BQUFHLGtCQUFBLDJCQUFBQyxZQUFBLFlBQUFDLElBQUEsQ0FBbEIsU0FBQUMsUUFBbUJDLEdBQVksRUFBRUMsR0FBYTtJQUFBLElBQUFDLFVBQUE7SUFBQSxPQUFBTCxZQUFBLFlBQUFNLElBQUEsVUFBQUMsU0FBQUMsUUFBQTtNQUFBO1FBQUEsUUFBQUEsUUFBQSxDQUFBQyxJQUFBLEdBQUFELFFBQUEsQ0FBQUUsSUFBQTtVQUFBO1lBQUFGLFFBQUEsQ0FBQUMsSUFBQTtZQUFBRCxRQUFBLENBQUFFLElBQUE7WUFBQSxPQUV4QkMsa0JBQUUsQ0FBQ0MsYUFBYSxDQUFDLENBQUM7VUFBQTtZQUFyQ1AsVUFBVSxHQUFBRyxRQUFBLENBQUFLLElBQUE7WUFBQSxPQUFBTCxRQUFBLENBQUFNLE1BQUEsV0FDVFYsR0FBRyxDQUFDVyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQ1gsVUFBVSxDQUFDO1VBQUE7WUFBQUcsUUFBQSxDQUFBQyxJQUFBO1lBQUFELFFBQUEsQ0FBQVMsRUFBQSxHQUFBVCxRQUFBO1lBQUEsT0FBQUEsUUFBQSxDQUFBTSxNQUFBLFdBRWhDVixHQUFHLENBQUNXLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO2NBQUVFLE9BQU8sK0JBQUFDLE1BQUEsQ0FBQVgsUUFBQSxDQUFBUyxFQUFBO1lBQW1DLENBQUMsQ0FBQztVQUFBO1VBQUE7WUFBQSxPQUFBVCxRQUFBLENBQUFZLElBQUE7UUFBQTtNQUFBO0lBQUEsR0FBQWxCLE9BQUE7RUFBQSxDQUU3RTtFQUFBLE9BQUFOLElBQUEsQ0FBQUMsS0FBQSxPQUFBQyxTQUFBO0FBQUE7QUFBQSxJQUFBdUIsUUFBQSxHQUVjO0VBQ2I1QixHQUFHLEVBQUhBO0FBQ0YsQ0FBQztBQUFBNkIsT0FBQSxjQUFBRCxRQUFBIn0=",
    "map": {
      "version": 3,
      "names": [
        "_dbFunc",
        "_interopRequireDefault",
        "require",
        "get",
        "_x",
        "_x2",
        "_get",
        "apply",
        "arguments",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "req",
        "res",
        "treatments",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "db",
        "getTreatments",
        "sent",
        "abrupt",
        "status",
        "json",
        "t0",
        "message",
        "concat",
        "stop",
        "_default",
        "exports"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "sources": [
        "treatment.ts"
      ],
      "sourcesContent": [
        "import { Request, Response } from 'express';\n\nimport db from '../db-func';\n\nexport async function get(req: Request, res: Response): Promise<Response> {\n  try {\n    const treatments = await db.getTreatments();\n    return res.status(200).json(treatments);\n  } catch (e) {\n    return res.status(500).json({ message: `could not get treatments: ${e}` });\n  }\n}\n\nexport default {\n  get,\n};\n"
      ],
      "mappings": ";;;;;;;;;;AAEA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4B,SAENC,GAAGA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,KAAA;EAAAA,IAAA,OAAAG,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAlB,SAAAC,QAAmBC,GAAY,EAAEC,GAAa;IAAA,IAAAC,UAAA;IAAA,OAAAL,YAAA,YAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAExBC,kBAAE,CAACC,aAAa,CAAC,CAAC;UAAA;YAArCP,UAAU,GAAAG,QAAA,CAAAK,IAAA;YAAA,OAAAL,QAAA,CAAAM,MAAA,WACTV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACX,UAAU,CAAC;UAAA;YAAAG,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;YAAA,OAAAA,QAAA,CAAAM,MAAA,WAEhCV,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEE,OAAO,+BAAAC,MAAA,CAAAX,QAAA,CAAAS,EAAA;YAAmC,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAT,QAAA,CAAAY,IAAA;QAAA;MAAA;IAAA,GAAAlB,OAAA;EAAA,CAE7E;EAAA,OAAAN,IAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,IAAAuB,QAAA,GAEc;EACb5B,GAAG,EAAHA;AACF,CAAC;AAAA6B,OAAA,cAAAD,QAAA"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/user.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/user.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/user.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/user.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
        "sourceFileName": "user.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.auth = auth;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.get = get;\nexports.getUserAppointments = getUserAppointments;\nexports.remove = remove;\nexports.update = update;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _auth2 = require(\"../auth\");\nvar _dbFunc = _interopRequireDefault(require(\"../db-func\"));\nvar _excluded = [\"salt\", \"keylen\", \"iterations\", \"hash\", \"digest\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nfunction removePasswordandAddToken(user) {\n  // use \"object rest operator\" to remove properties in a typescript-friendly way\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  var salt = user.salt,\n    keylen = user.keylen,\n    iterations = user.iterations,\n    hash = user.hash,\n    digest = user.digest,\n    cleanUser = (0, _objectWithoutProperties2[\"default\"])(user, _excluded);\n\n  // create token\n  var token = (0, _auth2.createJWT)(cleanUser);\n\n  // return user with token\n  return _objectSpread(_objectSpread({}, cleanUser), {}, {\n    token: token\n  });\n}\n\n// eslint-disable-next-line max-lines-per-function\nfunction get(_x, _x2) {\n  return _get.apply(this, arguments);\n}\nfunction _get() {\n  _get = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n    var userData, user;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            if (req.auth) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error('Cannot get user without login');\n          case 3:\n            _context.next = 5;\n            return _dbFunc[\"default\"].getUserById(req.auth.id);\n          case 5:\n            userData = _context.sent;\n            // remove password data from user object\n            user = removePasswordandAddToken(userData); // return user and appointments\n            return _context.abrupt(\"return\", res.status(200).json({\n              user: user\n            }));\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: \"could not get user: \".concat(_context.t0)\n            }));\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _get.apply(this, arguments);\n}\nfunction getUserAppointments(_x3, _x4) {\n  return _getUserAppointments.apply(this, arguments);\n}\nfunction _getUserAppointments() {\n  _getUserAppointments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n    var paramId, appointments, userAppointments;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            paramId = Number(req.params.id);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _dbFunc[\"default\"].getAppointments();\n          case 4:\n            appointments = _context2.sent;\n            userAppointments = Object.values(appointments).filter(function (a) {\n              return a.userId === paramId;\n            });\n            return _context2.abrupt(\"return\", res.status(200).json({\n              appointments: userAppointments\n            }));\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: \"could not get user appointments for id \".concat(paramId, \": \").concat(_context2.t0)\n            }));\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n  return _getUserAppointments.apply(this, arguments);\n}\nfunction create(_x5, _x6) {\n  return _create.apply(this, arguments);\n}\nfunction _create() {\n  _create = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n    var _req$body, email, password, existingUsers, takenEmail, userPasswordData, newUser, user;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _req$body = req.body, email = _req$body.email, password = _req$body.password;\n            _context3.next = 4;\n            return _dbFunc[\"default\"].getUsers();\n          case 4:\n            existingUsers = _context3.sent;\n            takenEmail = existingUsers.map(function (u) {\n              return u.email;\n            }).includes(email);\n            if (!takenEmail) {\n              _context3.next = 8;\n              break;\n            }\n            return _context3.abrupt(\"return\", res.status(400).json({\n              message: 'Email is already in use'\n            }));\n          case 8:\n            userPasswordData = (0, _auth2.hashPassword)(password);\n            _context3.next = 11;\n            return _dbFunc[\"default\"].addUser(_objectSpread({\n              email: email\n            }, userPasswordData));\n          case 11:\n            newUser = _context3.sent;\n            user = removePasswordandAddToken(newUser);\n            return _context3.abrupt(\"return\", res.status(201).json({\n              user: user\n            }));\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", res.status(500).json({\n              message: \"could not add user: \".concat(_context3.t0)\n            }));\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 16]]);\n  }));\n  return _create.apply(this, arguments);\n}\nfunction remove(_x7, _x8) {\n  return _remove.apply(this, arguments);\n}\nfunction _remove() {\n  _remove = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n    var id;\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            id = req.params.id;\n            _context4.next = 4;\n            return _dbFunc[\"default\"].deleteItem(_dbFunc[\"default\"].filenames.users, Number(id));\n          case 4:\n            return _context4.abrupt(\"return\", res.status(204));\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            return _context4.abrupt(\"return\", res.status(500).json({\n              message: \"could not delete user: \".concat(_context4.t0)\n            }));\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n  return _remove.apply(this, arguments);\n}\nfunction update(_x9, _x10) {\n  return _update.apply(this, arguments);\n}\nfunction _update() {\n  _update = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n    var id, patch, updatedUser, user;\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            id = req.params.id;\n            patch = req.body.patch;\n            if (patch) {\n              _context5.next = 5;\n              break;\n            }\n            return _context5.abrupt(\"return\", res.status(400).json({\n              message: 'this endpoint requires a patch in the body'\n            }));\n          case 5:\n            _context5.next = 7;\n            return _dbFunc[\"default\"].updateItem(Number(id), _dbFunc[\"default\"].filenames.users, patch);\n          case 7:\n            updatedUser = _context5.sent;\n            user = removePasswordandAddToken(updatedUser);\n            return _context5.abrupt(\"return\", res.status(200).json({\n              user: user\n            }));\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](0);\n            return _context5.abrupt(\"return\", res.status(500).json({\n              message: \"could not update appointment: \".concat(_context5.t0)\n            }));\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 12]]);\n  }));\n  return _update.apply(this, arguments);\n}\nfunction auth(_x11, _x12) {\n  return _auth.apply(this, arguments);\n}\nfunction _auth() {\n  _auth = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n    var _req$body2, email, password, users, validUser, user;\n    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password; // auth user\n            _context6.next = 3;\n            return _dbFunc[\"default\"].getUsers();\n          case 3:\n            users = _context6.sent;\n            validUser = users.reduce(function (foundUser, user) {\n              return user.email === email && (0, _auth2.passwordIsValid)(password, user) ? user : foundUser;\n            }, null);\n            if (validUser) {\n              _context6.next = 7;\n              break;\n            }\n            return _context6.abrupt(\"return\", res.status(400).json({\n              message: 'Invalid login'\n            }));\n          case 7:\n            // create jwt\n            user = removePasswordandAddToken(validUser);\n            return _context6.abrupt(\"return\", res.status(200).json({\n              user: user\n            }));\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _auth.apply(this, arguments);\n}\nvar _default = {\n  get: get,\n  getUserAppointments: getUserAppointments,\n  create: create,\n  remove: remove,\n  update: update,\n  auth: auth\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYXV0aDIiLCJyZXF1aXJlIiwiX2RiRnVuYyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfZXhjbHVkZWQiLCJvd25LZXlzIiwib2JqZWN0IiwiZW51bWVyYWJsZU9ubHkiLCJrZXlzIiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic3ltYm9scyIsImZpbHRlciIsInN5bSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImZvckVhY2giLCJrZXkiLCJfZGVmaW5lUHJvcGVydHkyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsInJlbW92ZVBhc3N3b3JkYW5kQWRkVG9rZW4iLCJ1c2VyIiwic2FsdCIsImtleWxlbiIsIml0ZXJhdGlvbnMiLCJoYXNoIiwiZGlnZXN0IiwiY2xlYW5Vc2VyIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsInRva2VuIiwiY3JlYXRlSldUIiwiZ2V0IiwiX3giLCJfeDIiLCJfZ2V0IiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiX3JlZ2VuZXJhdG9yIiwibWFyayIsIl9jYWxsZWUiLCJyZXEiLCJyZXMiLCJ1c2VyRGF0YSIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJhdXRoIiwiRXJyb3IiLCJkYiIsImdldFVzZXJCeUlkIiwiaWQiLCJzZW50IiwiYWJydXB0Iiwic3RhdHVzIiwianNvbiIsInQwIiwibWVzc2FnZSIsImNvbmNhdCIsInN0b3AiLCJnZXRVc2VyQXBwb2ludG1lbnRzIiwiX3gzIiwiX3g0IiwiX2dldFVzZXJBcHBvaW50bWVudHMiLCJfY2FsbGVlMiIsInBhcmFtSWQiLCJhcHBvaW50bWVudHMiLCJ1c2VyQXBwb2ludG1lbnRzIiwiX2NhbGxlZTIkIiwiX2NvbnRleHQyIiwiTnVtYmVyIiwicGFyYW1zIiwiZ2V0QXBwb2ludG1lbnRzIiwidmFsdWVzIiwiYSIsInVzZXJJZCIsImNyZWF0ZSIsIl94NSIsIl94NiIsIl9jcmVhdGUiLCJfY2FsbGVlMyIsIl9yZXEkYm9keSIsImVtYWlsIiwicGFzc3dvcmQiLCJleGlzdGluZ1VzZXJzIiwidGFrZW5FbWFpbCIsInVzZXJQYXNzd29yZERhdGEiLCJuZXdVc2VyIiwiX2NhbGxlZTMkIiwiX2NvbnRleHQzIiwiYm9keSIsImdldFVzZXJzIiwibWFwIiwidSIsImluY2x1ZGVzIiwiaGFzaFBhc3N3b3JkIiwiYWRkVXNlciIsInJlbW92ZSIsIl94NyIsIl94OCIsIl9yZW1vdmUiLCJfY2FsbGVlNCIsIl9jYWxsZWU0JCIsIl9jb250ZXh0NCIsImRlbGV0ZUl0ZW0iLCJmaWxlbmFtZXMiLCJ1c2VycyIsInVwZGF0ZSIsIl94OSIsIl94MTAiLCJfdXBkYXRlIiwiX2NhbGxlZTUiLCJwYXRjaCIsInVwZGF0ZWRVc2VyIiwiX2NhbGxlZTUkIiwiX2NvbnRleHQ1IiwidXBkYXRlSXRlbSIsIl94MTEiLCJfeDEyIiwiX2F1dGgiLCJfY2FsbGVlNiIsIl9yZXEkYm9keTIiLCJ2YWxpZFVzZXIiLCJfY2FsbGVlNiQiLCJfY29udGV4dDYiLCJyZWR1Y2UiLCJmb3VuZFVzZXIiLCJwYXNzd29yZElzVmFsaWQiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9Wb2x1bWVzL2ZpZmkvUkVBQ1QvUmVhY3RfUXVlcnkvUkVBQ1QtUVVFUlktU3RhcnRlci1maWxlcy9iYXNlLWxhenktZGF5cy9zZXJ2ZXIvc3JjL3JvdXRlLW1ldGhvZHMvIiwic291cmNlcyI6WyJ1c2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQvdHlwZXMnO1xuaW1wb3J0IHsgQXV0aFVzZXIsIGNyZWF0ZUpXVCwgaGFzaFBhc3N3b3JkLCBwYXNzd29yZElzVmFsaWQgfSBmcm9tICcuLi9hdXRoJztcbmltcG9ydCBkYiBmcm9tICcuLi9kYi1mdW5jJztcbmltcG9ydCB7IEF1dGhSZXF1ZXN0IH0gZnJvbSAnLi4vbWlkZGxld2FyZXMnO1xuXG5mdW5jdGlvbiByZW1vdmVQYXNzd29yZGFuZEFkZFRva2VuKHVzZXI6IEF1dGhVc2VyKTogVXNlciB7XG4gIC8vIHVzZSBcIm9iamVjdCByZXN0IG9wZXJhdG9yXCIgdG8gcmVtb3ZlIHByb3BlcnRpZXMgaW4gYSB0eXBlc2NyaXB0LWZyaWVuZGx5IHdheVxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gIGNvbnN0IHsgc2FsdCwga2V5bGVuLCBpdGVyYXRpb25zLCBoYXNoLCBkaWdlc3QsIC4uLmNsZWFuVXNlciB9ID0gdXNlcjtcblxuICAvLyBjcmVhdGUgdG9rZW5cbiAgY29uc3QgdG9rZW4gPSBjcmVhdGVKV1QoY2xlYW5Vc2VyKTtcblxuICAvLyByZXR1cm4gdXNlciB3aXRoIHRva2VuXG4gIHJldHVybiB7IC4uLmNsZWFuVXNlciwgdG9rZW4gfTtcbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1saW5lcy1wZXItZnVuY3Rpb25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXQocmVxOiBBdXRoUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8UmVzcG9uc2U+IHtcbiAgdHJ5IHtcbiAgICBpZiAoIXJlcS5hdXRoKSB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBnZXQgdXNlciB3aXRob3V0IGxvZ2luJyk7XG5cbiAgICAvLyBnZXQgZnJlc2ggdXNlciBkYXRhXG4gICAgY29uc3QgdXNlckRhdGEgPSBhd2FpdCBkYi5nZXRVc2VyQnlJZChyZXEuYXV0aC5pZCk7XG5cbiAgICAvLyByZW1vdmUgcGFzc3dvcmQgZGF0YSBmcm9tIHVzZXIgb2JqZWN0XG4gICAgY29uc3QgdXNlciA9IHJlbW92ZVBhc3N3b3JkYW5kQWRkVG9rZW4odXNlckRhdGEpO1xuXG4gICAgLy8gcmV0dXJuIHVzZXIgYW5kIGFwcG9pbnRtZW50c1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHVzZXIgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBgY291bGQgbm90IGdldCB1c2VyOiAke2V9YCB9KTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VXNlckFwcG9pbnRtZW50cyhcbiAgcmVxOiBBdXRoUmVxdWVzdCxcbiAgcmVzOiBSZXNwb25zZSxcbik6IFByb21pc2U8UmVzcG9uc2U+IHtcbiAgY29uc3QgcGFyYW1JZCA9IE51bWJlcihyZXEucGFyYW1zLmlkKTtcbiAgdHJ5IHtcbiAgICAvLyBnZXQgdXNlcidzIGFwcG9pbnRtZW50c1xuICAgIGNvbnN0IGFwcG9pbnRtZW50cyA9IGF3YWl0IGRiLmdldEFwcG9pbnRtZW50cygpO1xuICAgIGNvbnN0IHVzZXJBcHBvaW50bWVudHMgPSBPYmplY3QudmFsdWVzKGFwcG9pbnRtZW50cykuZmlsdGVyKFxuICAgICAgKGEpID0+IGEudXNlcklkID09PSBwYXJhbUlkLFxuICAgICk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgIGFwcG9pbnRtZW50czogdXNlckFwcG9pbnRtZW50cyxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBtZXNzYWdlOiBgY291bGQgbm90IGdldCB1c2VyIGFwcG9pbnRtZW50cyBmb3IgaWQgJHtwYXJhbUlkfTogJHtlfWAsXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZShyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xuICAgIGNvbnN0IGV4aXN0aW5nVXNlcnMgPSBhd2FpdCBkYi5nZXRVc2VycygpO1xuICAgIGNvbnN0IHRha2VuRW1haWwgPSBleGlzdGluZ1VzZXJzLm1hcCgodSkgPT4gdS5lbWFpbCkuaW5jbHVkZXMoZW1haWwpO1xuICAgIGlmICh0YWtlbkVtYWlsKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnRW1haWwgaXMgYWxyZWFkeSBpbiB1c2UnIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IHVzZXJQYXNzd29yZERhdGEgPSBoYXNoUGFzc3dvcmQocGFzc3dvcmQpO1xuICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCBkYi5hZGRVc2VyKHtcbiAgICAgIGVtYWlsLFxuICAgICAgLi4udXNlclBhc3N3b3JkRGF0YSxcbiAgICB9KTtcblxuICAgIGNvbnN0IHVzZXIgPSByZW1vdmVQYXNzd29yZGFuZEFkZFRva2VuKG5ld1VzZXIpO1xuXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5qc29uKHsgdXNlciB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IGBjb3VsZCBub3QgYWRkIHVzZXI6ICR7ZX1gIH0pO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmUoXG4gIHJlcTogQXV0aFJlcXVlc3QsXG4gIHJlczogUmVzcG9uc2UsXG4pOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcbiAgICBhd2FpdCBkYi5kZWxldGVJdGVtPEF1dGhVc2VyPihkYi5maWxlbmFtZXMudXNlcnMsIE51bWJlcihpZCkpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwNCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBgY291bGQgbm90IGRlbGV0ZSB1c2VyOiAke2V9YCB9KTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlKFxuICByZXE6IEF1dGhSZXF1ZXN0LFxuICByZXM6IFJlc3BvbnNlLFxuKTogUHJvbWlzZTxSZXNwb25zZT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XG4gICAgY29uc3QgeyBwYXRjaCB9ID0gcmVxLmJvZHk7XG4gICAgaWYgKCFwYXRjaCkge1xuICAgICAgcmV0dXJuIHJlc1xuICAgICAgICAuc3RhdHVzKDQwMClcbiAgICAgICAgLmpzb24oeyBtZXNzYWdlOiAndGhpcyBlbmRwb2ludCByZXF1aXJlcyBhIHBhdGNoIGluIHRoZSBib2R5JyB9KTtcbiAgICB9XG4gICAgY29uc3QgdXBkYXRlZFVzZXIgPSBhd2FpdCBkYi51cGRhdGVJdGVtPEF1dGhVc2VyPihcbiAgICAgIE51bWJlcihpZCksXG4gICAgICBkYi5maWxlbmFtZXMudXNlcnMsXG4gICAgICBwYXRjaCxcbiAgICApO1xuXG4gICAgY29uc3QgdXNlciA9IHJlbW92ZVBhc3N3b3JkYW5kQWRkVG9rZW4odXBkYXRlZFVzZXIpO1xuXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdXNlciB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXNcbiAgICAgIC5zdGF0dXMoNTAwKVxuICAgICAgLmpzb24oeyBtZXNzYWdlOiBgY291bGQgbm90IHVwZGF0ZSBhcHBvaW50bWVudDogJHtlfWAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dGgocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTxSZXNwb25zZT4ge1xuICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gcmVxLmJvZHk7XG5cbiAgLy8gYXV0aCB1c2VyXG4gIGNvbnN0IHVzZXJzID0gYXdhaXQgZGIuZ2V0VXNlcnMoKTtcbiAgY29uc3QgdmFsaWRVc2VyID0gdXNlcnMucmVkdWNlKFxuICAgIChmb3VuZFVzZXI6IEF1dGhVc2VyIHwgbnVsbCwgdXNlcikgPT5cbiAgICAgIHVzZXIuZW1haWwgPT09IGVtYWlsICYmIHBhc3N3b3JkSXNWYWxpZChwYXNzd29yZCwgdXNlcilcbiAgICAgICAgPyB1c2VyXG4gICAgICAgIDogZm91bmRVc2VyLFxuICAgIG51bGwsXG4gICk7XG5cbiAgaWYgKCF2YWxpZFVzZXIpIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6ICdJbnZhbGlkIGxvZ2luJyB9KTtcblxuICAvLyBjcmVhdGUgand0XG4gIGNvbnN0IHVzZXIgPSByZW1vdmVQYXNzd29yZGFuZEFkZFRva2VuKHZhbGlkVXNlcik7XG5cbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdXNlciB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXQsXG4gIGdldFVzZXJBcHBvaW50bWVudHMsXG4gIGNyZWF0ZSxcbiAgcmVtb3ZlLFxuICB1cGRhdGUsXG4gIGF1dGgsXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUdBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUE0QixJQUFBRyxTQUFBO0FBQUEsU0FBQUMsUUFBQUMsTUFBQSxFQUFBQyxjQUFBLFFBQUFDLElBQUEsR0FBQUMsTUFBQSxDQUFBRCxJQUFBLENBQUFGLE1BQUEsT0FBQUcsTUFBQSxDQUFBQyxxQkFBQSxRQUFBQyxPQUFBLEdBQUFGLE1BQUEsQ0FBQUMscUJBQUEsQ0FBQUosTUFBQSxPQUFBQyxjQUFBLElBQUFJLE9BQUEsR0FBQUEsT0FBQSxDQUFBQyxNQUFBLFdBQUFDLEdBQUEsV0FBQUosTUFBQSxDQUFBSyx3QkFBQSxDQUFBUixNQUFBLEVBQUFPLEdBQUEsRUFBQUUsVUFBQSxRQUFBUCxJ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",
    "map": {
      "version": 3,
      "names": [
        "_auth2",
        "require",
        "_dbFunc",
        "_interopRequireDefault",
        "_excluded",
        "ownKeys",
        "object",
        "enumerableOnly",
        "keys",
        "Object",
        "getOwnPropertySymbols",
        "symbols",
        "filter",
        "sym",
        "getOwnPropertyDescriptor",
        "enumerable",
        "push",
        "apply",
        "_objectSpread",
        "target",
        "i",
        "arguments",
        "length",
        "source",
        "forEach",
        "key",
        "_defineProperty2",
        "getOwnPropertyDescriptors",
        "defineProperties",
        "defineProperty",
        "removePasswordandAddToken",
        "user",
        "salt",
        "keylen",
        "iterations",
        "hash",
        "digest",
        "cleanUser",
        "_objectWithoutProperties2",
        "token",
        "createJWT",
        "get",
        "_x",
        "_x2",
        "_get",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "req",
        "res",
        "userData",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "auth",
        "Error",
        "db",
        "getUserById",
        "id",
        "sent",
        "abrupt",
        "status",
        "json",
        "t0",
        "message",
        "concat",
        "stop",
        "getUserAppointments",
        "_x3",
        "_x4",
        "_getUserAppointments",
        "_callee2",
        "paramId",
        "appointments",
        "userAppointments",
        "_callee2$",
        "_context2",
        "Number",
        "params",
        "getAppointments",
        "values",
        "a",
        "userId",
        "create",
        "_x5",
        "_x6",
        "_create",
        "_callee3",
        "_req$body",
        "email",
        "password",
        "existingUsers",
        "takenEmail",
        "userPasswordData",
        "newUser",
        "_callee3$",
        "_context3",
        "body",
        "getUsers",
        "map",
        "u",
        "includes",
        "hashPassword",
        "addUser",
        "remove",
        "_x7",
        "_x8",
        "_remove",
        "_callee4",
        "_callee4$",
        "_context4",
        "deleteItem",
        "filenames",
        "users",
        "update",
        "_x9",
        "_x10",
        "_update",
        "_callee5",
        "patch",
        "updatedUser",
        "_callee5$",
        "_context5",
        "updateItem",
        "_x11",
        "_x12",
        "_auth",
        "_callee6",
        "_req$body2",
        "validUser",
        "_callee6$",
        "_context6",
        "reduce",
        "foundUser",
        "passwordIsValid",
        "_default",
        "exports"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "sources": [
        "user.ts"
      ],
      "sourcesContent": [
        "import { Request, Response } from 'express';\n\nimport { User } from '../../../shared/types';\nimport { AuthUser, createJWT, hashPassword, passwordIsValid } from '../auth';\nimport db from '../db-func';\nimport { AuthRequest } from '../middlewares';\n\nfunction removePasswordandAddToken(user: AuthUser): User {\n  // use \"object rest operator\" to remove properties in a typescript-friendly way\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { salt, keylen, iterations, hash, digest, ...cleanUser } = user;\n\n  // create token\n  const token = createJWT(cleanUser);\n\n  // return user with token\n  return { ...cleanUser, token };\n}\n\n// eslint-disable-next-line max-lines-per-function\nexport async function get(req: AuthRequest, res: Response): Promise<Response> {\n  try {\n    if (!req.auth) throw new Error('Cannot get user without login');\n\n    // get fresh user data\n    const userData = await db.getUserById(req.auth.id);\n\n    // remove password data from user object\n    const user = removePasswordandAddToken(userData);\n\n    // return user and appointments\n    return res.status(200).json({ user });\n  } catch (e) {\n    return res.status(500).json({ message: `could not get user: ${e}` });\n  }\n}\n\nexport async function getUserAppointments(\n  req: AuthRequest,\n  res: Response,\n): Promise<Response> {\n  const paramId = Number(req.params.id);\n  try {\n    // get user's appointments\n    const appointments = await db.getAppointments();\n    const userAppointments = Object.values(appointments).filter(\n      (a) => a.userId === paramId,\n    );\n    return res.status(200).json({\n      appointments: userAppointments,\n    });\n  } catch (e) {\n    return res.status(500).json({\n      message: `could not get user appointments for id ${paramId}: ${e}`,\n    });\n  }\n}\n\nexport async function create(req: Request, res: Response): Promise<Response> {\n  try {\n    const { email, password } = req.body;\n    const existingUsers = await db.getUsers();\n    const takenEmail = existingUsers.map((u) => u.email).includes(email);\n    if (takenEmail) {\n      return res.status(400).json({ message: 'Email is already in use' });\n    }\n\n    const userPasswordData = hashPassword(password);\n    const newUser = await db.addUser({\n      email,\n      ...userPasswordData,\n    });\n\n    const user = removePasswordandAddToken(newUser);\n\n    return res.status(201).json({ user });\n  } catch (e) {\n    return res.status(500).json({ message: `could not add user: ${e}` });\n  }\n}\n\nexport async function remove(\n  req: AuthRequest,\n  res: Response,\n): Promise<Response> {\n  try {\n    const { id } = req.params;\n    await db.deleteItem<AuthUser>(db.filenames.users, Number(id));\n    return res.status(204);\n  } catch (e) {\n    return res.status(500).json({ message: `could not delete user: ${e}` });\n  }\n}\n\nexport async function update(\n  req: AuthRequest,\n  res: Response,\n): Promise<Response> {\n  try {\n    const { id } = req.params;\n    const { patch } = req.body;\n    if (!patch) {\n      return res\n        .status(400)\n        .json({ message: 'this endpoint requires a patch in the body' });\n    }\n    const updatedUser = await db.updateItem<AuthUser>(\n      Number(id),\n      db.filenames.users,\n      patch,\n    );\n\n    const user = removePasswordandAddToken(updatedUser);\n\n    return res.status(200).json({ user });\n  } catch (e) {\n    return res\n      .status(500)\n      .json({ message: `could not update appointment: ${e}` });\n  }\n}\n\nexport async function auth(req: Request, res: Response): Promise<Response> {\n  const { email, password } = req.body;\n\n  // auth user\n  const users = await db.getUsers();\n  const validUser = users.reduce(\n    (foundUser: AuthUser | null, user) =>\n      user.email === email && passwordIsValid(password, user)\n        ? user\n        : foundUser,\n    null,\n  );\n\n  if (!validUser) return res.status(400).json({ message: 'Invalid login' });\n\n  // create jwt\n  const user = removePasswordandAddToken(validUser);\n\n  return res.status(200).json({ user });\n}\n\nexport default {\n  get,\n  getUserAppointments,\n  create,\n  remove,\n  update,\n  auth,\n};\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/auth.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/auth.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/auth.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/auth.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/",
        "sourceFileName": "auth.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createJWT = createJWT;\nexports.hashPassword = hashPassword;\nexports.passwordIsValid = passwordIsValid;\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\nvar _pbkdf = _interopRequireDefault(require(\"pbkdf2\"));\nfunction hashPassword(password) {\n  var salt = _crypto[\"default\"].randomBytes(128).toString('base64');\n  var iterations = 10000;\n  var keylen = 64;\n  var digest = 'sha512';\n  var hash = _pbkdf[\"default\"].pbkdf2Sync(password, salt, iterations, keylen, digest).toString();\n  return {\n    salt: salt,\n    hash: hash,\n    iterations: iterations,\n    keylen: keylen,\n    digest: digest\n  };\n}\nfunction passwordIsValid(password, user) {\n  var attemptHash = _pbkdf[\"default\"].pbkdf2Sync(password, user.salt, user.iterations, user.keylen, user.digest);\n  return user.hash === attemptHash.toString();\n}\nfunction createJWT(user) {\n  return _jsonwebtoken[\"default\"].sign(user, process.env.EXPRESS_SECRET);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY3J5cHRvIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfanNvbndlYnRva2VuIiwiX3Bia2RmIiwiaGFzaFBhc3N3b3JkIiwicGFzc3dvcmQiLCJzYWx0IiwiY3J5cHRvIiwicmFuZG9tQnl0ZXMiLCJ0b1N0cmluZyIsIml0ZXJhdGlvbnMiLCJrZXlsZW4iLCJkaWdlc3QiLCJoYXNoIiwicGJrZGYyIiwicGJrZGYyU3luYyIsInBhc3N3b3JkSXNWYWxpZCIsInVzZXIiLCJhdHRlbXB0SGFzaCIsImNyZWF0ZUpXVCIsImpzb253ZWJ0b2tlbiIsInNpZ24iLCJwcm9jZXNzIiwiZW52IiwiRVhQUkVTU19TRUNSRVQiXSwic291cmNlUm9vdCI6Ii9Wb2x1bWVzL2ZpZmkvUkVBQ1QvUmVhY3RfUXVlcnkvUkVBQ1QtUVVFUlktU3RhcnRlci1maWxlcy9iYXNlLWxhenktZGF5cy9zZXJ2ZXIvc3JjLyIsInNvdXJjZXMiOlsiYXV0aC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5pbXBvcnQganNvbndlYnRva2VuIGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQgcGJrZGYyIGZyb20gJ3Bia2RmMic7XG5cbmltcG9ydCB7IE5ld1VzZXIsIFVzZXIgfSBmcm9tICcuLi8uLi9zaGFyZWQvdHlwZXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBhc3N3b3JkSGFzaCB7XG4gIHNhbHQ6IHN0cmluZztcbiAgaGFzaDogc3RyaW5nO1xuICBpdGVyYXRpb25zOiBudW1iZXI7XG4gIGtleWxlbjogbnVtYmVyO1xuICBkaWdlc3Q6IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgTmV3QXV0aFVzZXIgPSBOZXdVc2VyICYgUGFzc3dvcmRIYXNoO1xuZXhwb3J0IHR5cGUgQXV0aFVzZXIgPSBVc2VyICYgUGFzc3dvcmRIYXNoO1xuXG5leHBvcnQgZnVuY3Rpb24gaGFzaFBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiBQYXNzd29yZEhhc2gge1xuICBjb25zdCBzYWx0ID0gY3J5cHRvLnJhbmRvbUJ5dGVzKDEyOCkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICBjb25zdCBpdGVyYXRpb25zID0gMTAwMDA7XG4gIGNvbnN0IGtleWxlbiA9IDY0O1xuICBjb25zdCBkaWdlc3QgPSAnc2hhNTEyJztcbiAgY29uc3QgaGFzaCA9IHBia2RmMlxuICAgIC5wYmtkZjJTeW5jKHBhc3N3b3JkLCBzYWx0LCBpdGVyYXRpb25zLCBrZXlsZW4sIGRpZ2VzdClcbiAgICAudG9TdHJpbmcoKTtcblxuICByZXR1cm4ge1xuICAgIHNhbHQsXG4gICAgaGFzaCxcbiAgICBpdGVyYXRpb25zLFxuICAgIGtleWxlbixcbiAgICBkaWdlc3QsXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXNzd29yZElzVmFsaWQocGFzc3dvcmQ6IHN0cmluZywgdXNlcjogQXV0aFVzZXIpOiBib29sZWFuIHtcbiAgY29uc3QgYXR0ZW1wdEhhc2ggPSBwYmtkZjIucGJrZGYyU3luYyhcbiAgICBwYXNzd29yZCxcbiAgICB1c2VyLnNhbHQsXG4gICAgdXNlci5pdGVyYXRpb25zLFxuICAgIHVzZXIua2V5bGVuLFxuICAgIHVzZXIuZGlnZXN0LFxuICApO1xuICByZXR1cm4gdXNlci5oYXNoID09PSBhdHRlbXB0SGFzaC50b1N0cmluZygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSldUKHVzZXI6IFVzZXIpOiBzdHJpbmcge1xuICByZXR1cm4ganNvbndlYnRva2VuLnNpZ24odXNlciwgcHJvY2Vzcy5lbnYuRVhQUkVTU19TRUNSRVQpO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxhQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxNQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFlTyxTQUFTRyxZQUFZQSxDQUFDQyxRQUFnQixFQUFnQjtFQUMzRCxJQUFNQyxJQUFJLEdBQUdDLGtCQUFNLENBQUNDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsUUFBUSxDQUFDLFFBQVEsQ0FBQztFQUN2RCxJQUFNQyxVQUFVLEdBQUcsS0FBSztFQUN4QixJQUFNQyxNQUFNLEdBQUcsRUFBRTtFQUNqQixJQUFNQyxNQUFNLEdBQUcsUUFBUTtFQUN2QixJQUFNQyxJQUFJLEdBQUdDLGlCQUFNLENBQ2hCQyxVQUFVLENBQUNWLFFBQVEsRUFBRUMsSUFBSSxFQUFFSSxVQUFVLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxDQUFDLENBQ3RESCxRQUFRLENBQUMsQ0FBQztFQUViLE9BQU87SUFDTEgsSUFBSSxFQUFKQSxJQUFJO0lBQ0pPLElBQUksRUFBSkEsSUFBSTtJQUNKSCxVQUFVLEVBQVZBLFVBQVU7SUFDVkMsTUFBTSxFQUFOQSxNQUFNO0lBQ05DLE1BQU0sRUFBTkE7RUFDRixDQUFDO0FBQ0g7QUFFTyxTQUFTSSxlQUFlQSxDQUFDWCxRQUFnQixFQUFFWSxJQUFjLEVBQVc7RUFDekUsSUFBTUMsV0FBVyxHQUFHSixpQkFBTSxDQUFDQyxVQUFVLENBQ25DVixRQUFRLEVBQ1JZLElBQUksQ0FBQ1gsSUFBSSxFQUNUVyxJQUFJLENBQUNQLFVBQVUsRUFDZk8sSUFBSSxDQUFDTixNQUFNLEVBQ1hNLElBQUksQ0FBQ0wsTUFDUCxDQUFDO0VBQ0QsT0FBT0ssSUFBSSxDQUFDSixJQUFJLEtBQUtLLFdBQVcsQ0FBQ1QsUUFBUSxDQUFDLENBQUM7QUFDN0M7QUFFTyxTQUFTVSxTQUFTQSxDQUFDRixJQUFVLEVBQVU7RUFDNUMsT0FBT0csd0JBQVksQ0FBQ0MsSUFBSSxDQUFDSixJQUFJLEVBQUVLLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxjQUFjLENBQUM7QUFDNUQifQ==",
    "map": {
      "version": 3,
      "names": [
        "_crypto",
        "_interopRequireDefault",
        "require",
        "_jsonwebtoken",
        "_pbkdf",
        "hashPassword",
        "password",
        "salt",
        "crypto",
        "randomBytes",
        "toString",
        "iterations",
        "keylen",
        "digest",
        "hash",
        "pbkdf2",
        "pbkdf2Sync",
        "passwordIsValid",
        "user",
        "attemptHash",
        "createJWT",
        "jsonwebtoken",
        "sign",
        "process",
        "env",
        "EXPRESS_SECRET"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/",
      "sources": [
        "auth.ts"
      ],
      "sourcesContent": [
        "import crypto from 'crypto';\nimport jsonwebtoken from 'jsonwebtoken';\nimport pbkdf2 from 'pbkdf2';\n\nimport { NewUser, User } from '../../shared/types';\n\nexport interface PasswordHash {\n  salt: string;\n  hash: string;\n  iterations: number;\n  keylen: number;\n  digest: string;\n}\n\nexport type NewAuthUser = NewUser & PasswordHash;\nexport type AuthUser = User & PasswordHash;\n\nexport function hashPassword(password: string): PasswordHash {\n  const salt = crypto.randomBytes(128).toString('base64');\n  const iterations = 10000;\n  const keylen = 64;\n  const digest = 'sha512';\n  const hash = pbkdf2\n    .pbkdf2Sync(password, salt, iterations, keylen, digest)\n    .toString();\n\n  return {\n    salt,\n    hash,\n    iterations,\n    keylen,\n    digest,\n  };\n}\n\nexport function passwordIsValid(password: string, user: AuthUser): boolean {\n  const attemptHash = pbkdf2.pbkdf2Sync(\n    password,\n    user.salt,\n    user.iterations,\n    user.keylen,\n    user.digest,\n  );\n  return user.hash === attemptHash.toString();\n}\n\nexport function createJWT(user: User): string {\n  return jsonwebtoken.sign(user, process.env.EXPRESS_SECRET);\n}\n"
      ],
      "mappings": ";;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AAeO,SAASG,YAAYA,CAACC,QAAgB,EAAgB;EAC3D,IAAMC,IAAI,GAAGC,kBAAM,CAACC,WAAW,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC;EACvD,IAAMC,UAAU,GAAG,KAAK;EACxB,IAAMC,MAAM,GAAG,EAAE;EACjB,IAAMC,MAAM,GAAG,QAAQ;EACvB,IAAMC,IAAI,GAAGC,iBAAM,CAChBC,UAAU,CAACV,QAAQ,EAAEC,IAAI,EAAEI,UAAU,EAAEC,MAAM,EAAEC,MAAM,CAAC,CACtDH,QAAQ,CAAC,CAAC;EAEb,OAAO;IACLH,IAAI,EAAJA,IAAI;IACJO,IAAI,EAAJA,IAAI;IACJH,UAAU,EAAVA,UAAU;IACVC,MAAM,EAANA,MAAM;IACNC,MAAM,EAANA;EACF,CAAC;AACH;AAEO,SAASI,eAAeA,CAACX,QAAgB,EAAEY,IAAc,EAAW;EACzE,IAAMC,WAAW,GAAGJ,iBAAM,CAACC,UAAU,CACnCV,QAAQ,EACRY,IAAI,CAACX,IAAI,EACTW,IAAI,CAACP,UAAU,EACfO,IAAI,CAACN,MAAM,EACXM,IAAI,CAACL,MACP,CAAC;EACD,OAAOK,IAAI,CAACJ,IAAI,KAAKK,WAAW,CAACT,QAAQ,CAAC,CAAC;AAC7C;AAEO,SAASU,SAASA,CAACF,IAAU,EAAU;EAC5C,OAAOG,wBAAY,CAACC,IAAI,CAACJ,IAAI,EAAEK,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC;AAC5D"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/appointmentUtils.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
        "sourceFileName": "appointmentUtils.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAppointments = createAppointments;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\nvar _ = _interopRequireDefault(require(\".\"));\n/* eslint-disable no-plusplus */\n/* eslint-disable max-lines-per-function */\n\n// utility function to make unpadded month/date numbers into padded\nfunction padNum(num) {\n  return num.toString().length === 1 ? \"0\".concat(num) : num.toString();\n}\n\n// utility function to make appointment from date and treatment type\nfunction makeAppointment(treatmentName, dateTime, existingAppointmentsById) {\n  var id = Number((0, _dayjs[\"default\"])(dateTime).unix());\n\n  // if the appointment is filled, don't make the recurring appointment\n  if (existingAppointmentsById[id]) return existingAppointmentsById[id];\n\n  // otherwise, make the recurring appointment\n  var appointment = {\n    id: id,\n    dateTime: dateTime.toDate(),\n    treatmentName: treatmentName\n  };\n\n  // assign some appointments as filled by nonexistent \"user 100\" based on datetime mod\n  if (Math.floor(Math.random() * 10) % 3 === 0) appointment.userId = 100;\n  return appointment;\n}\n\n// generate an appointments object with recurring appointments and add to db\n// (if not already there)\n// Meant to be run on server startup\nfunction createAppointments() {\n  return _createAppointments.apply(this, arguments);\n}\nfunction _createAppointments() {\n  _createAppointments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var existingAppointments, existingAppointmentsById, allAppointments, month, year, monthsFromNow, monthString, startDate, lastDate, i, dayNum, thisDate, dayofWeek, _i, randNum;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // eslint-disable-next-line no-console\n            console.log('Creating appointments...');\n            _context.next = 3;\n            return _[\"default\"].getAppointments();\n          case 3:\n            existingAppointments = _context.sent;\n            // make a map of appointments by id for easy access;\n            existingAppointmentsById = {};\n            existingAppointments.forEach(function (a) {\n              existingAppointmentsById[a.id] = a;\n            });\n            allAppointments = []; // start with today\n            month = (0, _dayjs[\"default\"])().month();\n            year = (0, _dayjs[\"default\"])().year(); // do this for three months; dayjs 0-indexes its months, hence starting at 1\n            monthsFromNow = 1;\n          case 10:\n            if (!(monthsFromNow < 4)) {\n              _context.next = 44;\n              break;\n            }\n            // make sure month is two digits;\n            monthString = padNum(month + monthsFromNow);\n            startDate = (0, _dayjs[\"default\"])(\"\".concat(year).concat(monthString, \"01\"));\n            lastDate = Number(startDate.endOf('month').format('DD'));\n            i = 0;\n          case 15:\n            if (!(i < lastDate)) {\n              _context.next = 41;\n              break;\n            }\n            dayNum = i + 1;\n            thisDate = (0, _dayjs[\"default\"])(\"\".concat(year).concat(monthString).concat(padNum(dayNum)));\n            dayofWeek = Number(thisDate.format('d'));\n            _context.t0 = dayofWeek;\n            _context.next = _context.t0 === 1 ? 22 : _context.t0 === 2 ? 25 : _context.t0 === 3 ? 28 : _context.t0 === 4 ? 31 : _context.t0 === 5 ? 34 : 37;\n            break;\n          case 22:\n            // Mondays: massage 10am, facial 2pm\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(10, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('facial', thisDate.clone().add(14, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 25:\n            // Tuesdays: scrub 1pm, massage 3pm\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(13, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(15, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 28:\n            // Wednesdays: facial: 11am, scrub 4pm\n            allAppointments.push(makeAppointment('facial', thisDate.clone().add(11, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(16, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 31:\n            // Thursdays: scrub: 9am, scrub 1pm\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(9, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('scrub', thisDate.clone().add(13, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 34:\n            // Fridays: massage: 1pm, massage 3pm\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(13, 'hours'), existingAppointmentsById));\n            allAppointments.push(makeAppointment('massage', thisDate.clone().add(15, 'hours'), existingAppointmentsById));\n            return _context.abrupt(\"break\", 38);\n          case 37:\n            return _context.abrupt(\"break\", 38);\n          case 38:\n            i++;\n            _context.next = 15;\n            break;\n          case 41:\n            monthsFromNow++;\n            _context.next = 10;\n            break;\n          case 44:\n            // add a few for user 1\n            for (_i = 0; _i < allAppointments.length; _i++) {\n              if (_i % 45 === 0) {\n                randNum = Math.floor(Math.random() * 14) - 7;\n                if (randNum < 0) randNum = 0;\n                if (randNum > allAppointments.length - 1) randNum = allAppointments.length - 1;\n                allAppointments[_i + randNum].userId = 1;\n              }\n            }\n            _context.next = 47;\n            return _[\"default\"].writeAppointments(allAppointments);\n          case 47:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createAppointments.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "_dayjs",
        "_interopRequireDefault",
        "require",
        "_",
        "padNum",
        "num",
        "toString",
        "length",
        "concat",
        "makeAppointment",
        "treatmentName",
        "dateTime",
        "existingAppointmentsById",
        "id",
        "Number",
        "dayjs",
        "unix",
        "appointment",
        "toDate",
        "Math",
        "floor",
        "random",
        "userId",
        "createAppointments",
        "_createAppointments",
        "apply",
        "arguments",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "existingAppointments",
        "allAppointments",
        "month",
        "year",
        "monthsFromNow",
        "monthString",
        "startDate",
        "lastDate",
        "i",
        "dayNum",
        "thisDate",
        "dayofWeek",
        "_i",
        "randNum",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "console",
        "log",
        "db",
        "getAppointments",
        "sent",
        "forEach",
        "a",
        "endOf",
        "format",
        "t0",
        "push",
        "clone",
        "add",
        "abrupt",
        "writeAppointments",
        "stop"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "sources": [
        "appointmentUtils.ts"
      ],
      "sourcesContent": [
        "/* eslint-disable no-plusplus */\n/* eslint-disable max-lines-per-function */\nimport dayjs from 'dayjs';\n\nimport { Appointment } from '../../../shared/types';\nimport db from '.';\n\n// utility function to make unpadded month/date numbers into padded\nfunction padNum(num: number | string): string {\n  return num.toString().length === 1 ? `0${num}` : num.toString();\n}\n\n// utility function to make appointment from date and treatment type\nfunction makeAppointment(\n  treatmentName: string,\n  dateTime: dayjs.Dayjs,\n  existingAppointmentsById: Record<number, Appointment>,\n): Appointment {\n  const id = Number(dayjs(dateTime).unix());\n\n  // if the appointment is filled, don't make the recurring appointment\n  if (existingAppointmentsById[id]) return existingAppointmentsById[id];\n\n  // otherwise, make the recurring appointment\n  const appointment: Appointment = {\n    id,\n    dateTime: dateTime.toDate(),\n    treatmentName,\n  };\n\n  // assign some appointments as filled by nonexistent \"user 100\" based on datetime mod\n  if (Math.floor(Math.random() * 10) % 3 === 0) appointment.userId = 100;\n\n  return appointment;\n}\n\n// generate an appointments object with recurring appointments and add to db\n// (if not already there)\n// Meant to be run on server startup\nexport async function createAppointments(): Promise<void> {\n  // eslint-disable-next-line no-console\n  console.log('Creating appointments...');\n  const existingAppointments = await db.getAppointments();\n\n  // make a map of appointments by id for easy access;\n  const existingAppointmentsById = {};\n  existingAppointments.forEach((a) => {\n    existingAppointmentsById[a.id] = a;\n  });\n\n  const allAppointments: Appointment[] = [];\n\n  // start with today\n  const month = dayjs().month();\n  const year = dayjs().year();\n\n  // do this for three months; dayjs 0-indexes its months, hence starting at 1\n  for (let monthsFromNow = 1; monthsFromNow < 4; monthsFromNow++) {\n    // make sure month is two digits;\n    const monthString = padNum(month + monthsFromNow);\n    const startDate = dayjs(`${year}${monthString}01`);\n    const lastDate = Number(startDate.endOf('month').format('DD'));\n\n    for (let i = 0; i < lastDate; i++) {\n      const dayNum = i + 1;\n      const thisDate = dayjs(`${year}${monthString}${padNum(dayNum)}`);\n      const dayofWeek = Number(thisDate.format('d'));\n      switch (dayofWeek) {\n        case 1:\n          // Mondays: massage 10am, facial 2pm\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(10, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'facial',\n              thisDate.clone().add(14, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 2:\n          // Tuesdays: scrub 1pm, massage 3pm\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(13, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(15, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 3:\n          // Wednesdays: facial: 11am, scrub 4pm\n          allAppointments.push(\n            makeAppointment(\n              'facial',\n              thisDate.clone().add(11, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(16, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 4:\n          // Thursdays: scrub: 9am, scrub 1pm\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(9, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'scrub',\n              thisDate.clone().add(13, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        case 5:\n          // Fridays: massage: 1pm, massage 3pm\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(13, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          allAppointments.push(\n            makeAppointment(\n              'massage',\n              thisDate.clone().add(15, 'hours'),\n              existingAppointmentsById,\n            ),\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  // add a few for user 1\n  for (let i = 0; i < allAppointments.length; i++) {\n    if (i % 45 === 0) {\n      let randNum = Math.floor(Math.random() * 14) - 7;\n      if (randNum < 0) randNum = 0;\n      if (randNum > allAppointments.length - 1)\n        randNum = allAppointments.length - 1;\n      allAppointments[i + randNum].userId = 1;\n    }\n  }\n  await db.writeAppointments(allAppointments);\n}\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/index.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
        "sourceFileName": "index.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filenames = exports[\"default\"] = void 0;\nexports.getAppointments = getAppointments;\nexports.getAppointmentsByMonthYear = getAppointmentsByMonthYear;\nexports.getStaff = getStaff;\nexports.getTreatments = getTreatments;\nexports.getUserById = getUserById;\nexports.getUsers = getUsers;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dayjs = _interopRequireDefault(require(\"dayjs\"));\nvar _fastJsonPatch = _interopRequireDefault(require(\"fast-json-patch\"));\nvar _fs = require(\"fs\");\nvar _path = _interopRequireDefault(require(\"path\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; } // NOTE: in production this would connect to a database,\n// not JSON files. However, I didn't want to make you install\n// a particular database in order to use this app.\n//\n// This \"database\" is horribly inefficient and will be a problem\n// when Lazy Days Spa opens to hundreds of locations globally.\nvar dbPath = 'db';\nvar filenames;\n/* ****** Read from file ***** */\nexports.filenames = filenames;\n(function (filenames) {\n  filenames[\"users\"] = \"users.json\";\n  filenames[\"appointments\"] = \"appointments.json\";\n  filenames[\"treatments\"] = \"treatments.json\";\n  filenames[\"staff\"] = \"staff.json\";\n})(filenames || (exports.filenames = filenames = {}));\nfunction getJSONfromFile(_x) {\n  return _getJSONfromFile.apply(this, arguments);\n}\n/* ****** Write to file ***** */\nfunction _getJSONfromFile() {\n  _getJSONfromFile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(filename) {\n    var filePath, data;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            filePath = _path[\"default\"].join(dbPath, filename);\n            _context.next = 3;\n            return _fs.promises.readFile(filePath);\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", JSON.parse(data.toString()));\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getJSONfromFile.apply(this, arguments);\n}\nfunction writeJSONToFile(_x2, _x3) {\n  return _writeJSONToFile.apply(this, arguments);\n}\n/* ****** Delete item ***** */\nfunction _writeJSONToFile() {\n  _writeJSONToFile = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(filename, data) {\n    var filePath, jsonData;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            filePath = _path[\"default\"].join(dbPath, filename);\n            jsonData = JSON.stringify(data);\n            _context2.next = 4;\n            return _fs.promises.writeFile(filePath, jsonData, {\n              flag: 'w'\n            });\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _writeJSONToFile.apply(this, arguments);\n}\nfunction deleteItem(_x4, _x5) {\n  return _deleteItem.apply(this, arguments);\n}\n/* ****** Update item ***** */\nfunction _deleteItem() {\n  _deleteItem = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(filename, itemId) {\n    var items, foundItemArray, updatedItems;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return getJSONfromFile(filename);\n          case 3:\n            items = _context3.sent;\n            foundItemArray = items.filter(function (i) {\n              return i.id === itemId;\n            });\n            if (!(foundItemArray.length !== 1)) {\n              _context3.next = 7;\n              break;\n            }\n            throw new Error(\"Could not find item id \".concat(itemId, \" in \").concat(filename));\n          case 7:\n            updatedItems = items.filter(function (i) {\n              return i.id !== itemId;\n            });\n            _context3.next = 10;\n            return writeJSONToFile(filename, updatedItems);\n          case 10:\n            return _context3.abrupt(\"return\", itemId);\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            throw new Error(\"Could not delete item id \".concat(itemId, \" from \").concat(filename, \": \").concat(_context3.t0));\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 13]]);\n  }));\n  return _deleteItem.apply(this, arguments);\n}\nvar applyPatch = _fastJsonPatch[\"default\"].applyPatch;\n// eslint-disable-next-line max-lines-per-function\nfunction updateItem(_x6, _x7, _x8) {\n  return _updateItem.apply(this, arguments);\n}\nfunction _updateItem() {\n  _updateItem = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(itemId, filename,\n  // should be fast-json-patch Operation, but I can't destructure on import\n  itemPatch) {\n    var items, foundItems, updatedData;\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return getJSONfromFile(filename);\n          case 3:\n            items = _context4.sent;\n            // find the item\n            foundItems = items.filter(function (item) {\n              return item.id === itemId;\n            });\n            if (!(foundItems.length !== 1)) {\n              _context4.next = 7;\n              break;\n            }\n            throw new Error(\"Could not find item with id \".concat(itemId));\n          case 7:\n            // apply the patch\n            updatedData = applyPatch(foundItems[0], itemPatch).newDocument; // write the new item data. Note: this whole function is horribly inefficient and\n            // would be much improved with a real db.\n            items.forEach(function (item, i) {\n              if (item.id === itemId) {\n                items[i] = updatedData;\n              }\n            });\n            _context4.next = 11;\n            return writeJSONToFile(filename, items);\n          case 11:\n            return _context4.abrupt(\"return\", updatedData);\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](0);\n            throw new Error(\"Could not delete item id \".concat(itemId, \" from \").concat(filename, \": \").concat(_context4.t0));\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 14]]);\n  }));\n  return _updateItem.apply(this, arguments);\n}\nfunction getAppointments() {\n  return _getAppointments.apply(this, arguments);\n}\nfunction _getAppointments() {\n  _getAppointments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", getJSONfromFile(filenames.appointments));\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getAppointments.apply(this, arguments);\n}\nfunction getAppointmentsByMonthYear(_x9, _x10) {\n  return _getAppointmentsByMonthYear.apply(this, arguments);\n}\nfunction _getAppointmentsByMonthYear() {\n  _getAppointmentsByMonthYear = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(month, year) {\n    var appointmentDateMap, allAppointments;\n    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            // yet another place where inefficiency is ridiculous compared to a real db\n            appointmentDateMap = {};\n            _context6.next = 3;\n            return getAppointments();\n          case 3:\n            allAppointments = _context6.sent;\n            // filter data and massage into format expected by client\n            allAppointments.forEach(function (appointment) {\n              var appointmentDate = (0, _dayjs[\"default\"])(appointment.dateTime);\n              if (\n              // zero-indexed month\n              appointmentDate.month() + 1 === Number(month) && appointmentDate.year() === Number(year)) {\n                var dayNum = (0, _dayjs[\"default\"])(appointment.dateTime).date();\n                if (appointmentDateMap[dayNum]) {\n                  appointmentDateMap[dayNum].push(appointment);\n                } else {\n                  appointmentDateMap[dayNum] = [appointment];\n                }\n              }\n            });\n            return _context6.abrupt(\"return\", appointmentDateMap);\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getAppointmentsByMonthYear.apply(this, arguments);\n}\nfunction getTreatments() {\n  return _getTreatments.apply(this, arguments);\n}\nfunction _getTreatments() {\n  _getTreatments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7() {\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", getJSONfromFile(filenames.treatments));\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getTreatments.apply(this, arguments);\n}\nfunction getStaff() {\n  return _getStaff.apply(this, arguments);\n}\nfunction _getStaff() {\n  _getStaff = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", getJSONfromFile(filenames.staff));\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _getStaff.apply(this, arguments);\n}\nfunction getUsers() {\n  return getJSONfromFile(filenames.users);\n}\nfunction getUserById(_x11) {\n  return _getUserById.apply(this, arguments);\n}\n/* ****** Add new user ***** */\nfunction _getUserById() {\n  _getUserById = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(userId) {\n    var users, userData;\n    return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return getUsers();\n          case 2:\n            users = _context9.sent;\n            userData = users.filter(function (u) {\n              return u.id === userId;\n            });\n            if (!(userData.length < 1)) {\n              _context9.next = 6;\n              break;\n            }\n            throw new Error('user not found');\n          case 6:\n            if (!(userData.length < 1)) {\n              _context9.next = 8;\n              break;\n            }\n            throw new Error('duplicate user found');\n          case 8:\n            return _context9.abrupt(\"return\", userData[0]);\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getUserById.apply(this, arguments);\n}\nfunction addUser(_x12) {\n  return _addUser.apply(this, arguments);\n}\n/* ****** Add new appoinment ***** */\nfunction _addUser() {\n  _addUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(newUserData) {\n    var users, ids, maxId, newUserId, newUser;\n    return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return getUsers();\n          case 2:\n            users = _context10.sent;\n            // get the max id from the existing ids\n            ids = Object.values(users).map(function (u) {\n              return u.id;\n            });\n            maxId = ids.reduce(function (tempMaxId, itemId) {\n              return itemId > tempMaxId ? itemId : tempMaxId;\n            }, 0); // the new user will have an id of the max id plus 1\n            newUserId = maxId + 1;\n            newUser = _objectSpread(_objectSpread({}, newUserData), {}, {\n              id: newUserId\n            });\n            _context10.next = 9;\n            return writeJSONToFile(filenames.users, [].concat((0, _toConsumableArray2[\"default\"])(users), [newUser]));\n          case 9:\n            return _context10.abrupt(\"return\", newUser);\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _addUser.apply(this, arguments);\n}\nfunction writeAppointments(_x13) {\n  return _writeAppointments.apply(this, arguments);\n}\nfunction _writeAppointments() {\n  _writeAppointments = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(newAppointmentsArray) {\n    return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return writeJSONToFile(filenames.appointments, newAppointmentsArray);\n          case 2:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _writeAppointments.apply(this, arguments);\n}\nvar _default = {\n  filenames: filenames,\n  writeAppointments: writeAppointments,\n  addUser: addUser,\n  deleteItem: deleteItem,\n  updateItem: updateItem,\n  getUsers: getUsers,\n  getUserById: getUserById,\n  getAppointments: getAppointments,\n  getAppointmentsByMonthYear: getAppointmentsByMonthYear,\n  getStaff: getStaff,\n  getTreatments: getTreatments\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "names": [
        "_dayjs",
        "_interopRequireDefault",
        "require",
        "_fastJsonPatch",
        "_fs",
        "_path",
        "ownKeys",
        "object",
        "enumerableOnly",
        "keys",
        "Object",
        "getOwnPropertySymbols",
        "symbols",
        "filter",
        "sym",
        "getOwnPropertyDescriptor",
        "enumerable",
        "push",
        "apply",
        "_objectSpread",
        "target",
        "i",
        "arguments",
        "length",
        "source",
        "forEach",
        "key",
        "_defineProperty2",
        "getOwnPropertyDescriptors",
        "defineProperties",
        "defineProperty",
        "dbPath",
        "filenames",
        "exports",
        "getJSONfromFile",
        "_x",
        "_getJSONfromFile",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "filename",
        "filePath",
        "data",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "path",
        "join",
        "fs",
        "readFile",
        "sent",
        "abrupt",
        "JSON",
        "parse",
        "toString",
        "stop",
        "writeJSONToFile",
        "_x2",
        "_x3",
        "_writeJSONToFile",
        "_callee2",
        "jsonData",
        "_callee2$",
        "_context2",
        "stringify",
        "writeFile",
        "flag",
        "deleteItem",
        "_x4",
        "_x5",
        "_deleteItem",
        "_callee3",
        "itemId",
        "items",
        "foundItemArray",
        "updatedItems",
        "_callee3$",
        "_context3",
        "id",
        "Error",
        "concat",
        "t0",
        "applyPatch",
        "jsonPatch",
        "updateItem",
        "_x6",
        "_x7",
        "_x8",
        "_updateItem",
        "_callee4",
        "itemPatch",
        "foundItems",
        "updatedData",
        "_callee4$",
        "_context4",
        "item",
        "newDocument",
        "getAppointments",
        "_getAppointments",
        "_callee5",
        "_callee5$",
        "_context5",
        "appointments",
        "getAppointmentsByMonthYear",
        "_x9",
        "_x10",
        "_getAppointmentsByMonthYear",
        "_callee6",
        "month",
        "year",
        "appointmentDateMap",
        "allAppointments",
        "_callee6$",
        "_context6",
        "appointment",
        "appointmentDate",
        "dayjs",
        "dateTime",
        "Number",
        "dayNum",
        "date",
        "getTreatments",
        "_getTreatments",
        "_callee7",
        "_callee7$",
        "_context7",
        "treatments",
        "getStaff",
        "_getStaff",
        "_callee8",
        "_callee8$",
        "_context8",
        "staff",
        "getUsers",
        "users",
        "getUserById",
        "_x11",
        "_getUserById",
        "_callee9",
        "userId",
        "userData",
        "_callee9$",
        "_context9",
        "u",
        "addUser",
        "_x12",
        "_addUser",
        "_callee10",
        "newUserData",
        "ids",
        "maxId",
        "newUserId",
        "newUser",
        "_callee10$",
        "_context10",
        "values",
        "map",
        "reduce",
        "tempMaxId",
        "_toConsumableArray2",
        "writeAppointments",
        "_x13",
        "_writeAppointments",
        "_callee11",
        "newAppointmentsArray",
        "_callee11$",
        "_context11",
        "_default"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/db-func/",
      "sources": [
        "index.ts"
      ],
      "sourcesContent": [
        "// NOTE: in production this would connect to a database,\n// not JSON files. However, I didn't want to make you install\n// a particular database in order to use this app.\n//\n// This \"database\" is horribly inefficient and will be a problem\n// when Lazy Days Spa opens to hundreds of locations globally.\nimport dayjs from 'dayjs';\nimport jsonPatch, { Operation } from 'fast-json-patch';\nimport { promises as fs } from 'fs';\nimport path from 'path';\n\nimport {\n  Appointment,\n  AppointmentDateMap,\n  Staff,\n  Treatment,\n} from '../../../shared/types';\nimport { AuthUser, NewAuthUser } from '../auth';\n\ntype JsonDataType = AuthUser | Appointment | Treatment | Staff;\n\nconst dbPath = 'db';\nexport enum filenames {\n  users = 'users.json',\n  appointments = 'appointments.json',\n  treatments = 'treatments.json',\n  staff = 'staff.json',\n}\n\n/* ****** Read from file ***** */\nasync function getJSONfromFile<ItemType extends JsonDataType>(\n  filename: filenames,\n): Promise<ItemType[]> {\n  const filePath = path.join(dbPath, filename);\n  const data = await fs.readFile(filePath);\n  return JSON.parse(data.toString());\n}\n\n/* ****** Write to file ***** */\nasync function writeJSONToFile<T extends JsonDataType>(\n  filename: filenames,\n  data: Array<T>,\n): Promise<void> {\n  const filePath = path.join(dbPath, filename);\n  const jsonData = JSON.stringify(data);\n  await fs.writeFile(filePath, jsonData, { flag: 'w' });\n}\n\n/* ****** Delete item ***** */\nasync function deleteItem<T extends JsonDataType>(\n  filename: filenames,\n  itemId: number,\n): Promise<number> {\n  try {\n    const items = await getJSONfromFile<T>(filename);\n    const foundItemArray = items.filter((i) => i.id === itemId);\n    if (foundItemArray.length !== 1) {\n      throw new Error(`Could not find item id ${itemId} in ${filename}`);\n    }\n    const updatedItems = items.filter((i) => i.id !== itemId);\n    await writeJSONToFile(filename, updatedItems);\n    return itemId;\n  } catch (e) {\n    throw new Error(\n      `Could not delete item id ${itemId} from ${filename}: ${e}`,\n    );\n  }\n}\n\n/* ****** Update item ***** */\nconst { applyPatch } = jsonPatch;\n// eslint-disable-next-line max-lines-per-function\nasync function updateItem<DataType extends JsonDataType>(\n  itemId: number,\n  filename: filenames,\n  // should be fast-json-patch Operation, but I can't destructure on import\n  itemPatch: Operation[],\n): Promise<DataType> {\n  try {\n    const items = await getJSONfromFile<DataType>(filename);\n\n    // find the item\n    const foundItems = items.filter((item) => item.id === itemId);\n    if (foundItems.length !== 1) {\n      throw new Error(`Could not find item with id ${itemId}`);\n    }\n\n    // apply the patch\n    const updatedData = applyPatch(foundItems[0], itemPatch).newDocument;\n\n    // write the new item data. Note: this whole function is horribly inefficient and\n    // would be much improved with a real db.\n    items.forEach((item, i) => {\n      if (item.id === itemId) {\n        items[i] = updatedData;\n      }\n    });\n\n    await writeJSONToFile(filename, items);\n    return updatedData;\n  } catch (e) {\n    throw new Error(\n      `Could not delete item id ${itemId} from ${filename}: ${e}`,\n    );\n  }\n}\n\nexport async function getAppointments(): Promise<Appointment[]> {\n  return getJSONfromFile<Appointment>(filenames.appointments);\n}\n\nexport async function getAppointmentsByMonthYear(\n  month: string,\n  year: string,\n): Promise<AppointmentDateMap> {\n  // yet another place where inefficiency is ridiculous compared to a real db\n  const appointmentDateMap: AppointmentDateMap = {};\n  const allAppointments = await getAppointments();\n\n  // filter data and massage into format expected by client\n  allAppointments.forEach((appointment) => {\n    const appointmentDate = dayjs(appointment.dateTime);\n    if (\n      // zero-indexed month\n      appointmentDate.month() + 1 === Number(month) &&\n      appointmentDate.year() === Number(year)\n    ) {\n      const dayNum = dayjs(appointment.dateTime).date();\n      if (appointmentDateMap[dayNum]) {\n        appointmentDateMap[dayNum].push(appointment);\n      } else {\n        appointmentDateMap[dayNum] = [appointment];\n      }\n    }\n  });\n  return appointmentDateMap;\n}\n\nexport async function getTreatments(): Promise<Treatment[]> {\n  return getJSONfromFile<Treatment>(filenames.treatments);\n}\n\nexport async function getStaff(): Promise<Staff[]> {\n  return getJSONfromFile<Staff>(filenames.staff);\n}\n\nexport function getUsers(): Promise<AuthUser[]> {\n  return getJSONfromFile<AuthUser>(filenames.users);\n}\n\nexport async function getUserById(userId: number): Promise<AuthUser> {\n  const users = await getUsers();\n  const userData = users.filter((u) => u.id === userId);\n  if (userData.length < 1) throw new Error('user not found');\n  if (userData.length < 1) throw new Error('duplicate user found');\n  return userData[0];\n}\n\n/* ****** Add new user ***** */\nasync function addUser(newUserData: NewAuthUser): Promise<AuthUser> {\n  const users = await getUsers();\n\n  // get the max id from the existing ids\n  const ids: number[] = Object.values(users).map((u) => u.id);\n  const maxId = ids.reduce((tempMaxId: number, itemId: number) => {\n    return itemId > tempMaxId ? itemId : tempMaxId;\n  }, 0);\n\n  // the new user will have an id of the max id plus 1\n  const newUserId = maxId + 1;\n\n  const newUser = { ...newUserData, id: newUserId };\n  await writeJSONToFile(filenames.users, [...users, newUser]);\n  return newUser;\n}\n\n/* ****** Add new appoinment ***** */\nasync function writeAppointments(\n  newAppointmentsArray: Appointment[],\n): Promise<void> {\n  await writeJSONToFile(filenames.appointments, newAppointmentsArray);\n}\n\nexport default {\n  filenames,\n  writeAppointments,\n  addUser,\n  deleteItem,\n  updateItem,\n  getUsers,\n  getUserById,\n  getAppointments,\n  getAppointmentsByMonthYear,\n  getStaff,\n  getTreatments,\n};\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/index.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/",
        "sourceFileName": "index.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateUser = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dbFunc = _interopRequireDefault(require(\"../db-func\"));\n// middleware for validating user\n// eslint-disable-next-line consistent-return\nvar validateUser = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n    var _req$auth, requestedId;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            // check that the token matches the id url param (decoded token resides in req.user)\n            requestedId = Number(req.params.id);\n            if (!(((_req$auth = req.auth) === null || _req$auth === void 0 ? void 0 : _req$auth.id) !== requestedId)) {\n              _context.next = 6;\n              break;\n            }\n            res.status(401).send();\n            _context.next = 9;\n            break;\n          case 6:\n            _context.next = 8;\n            return _dbFunc[\"default\"].getUserById(requestedId);\n          case 8:\n            next();\n          case 9:\n            _context.next = 14;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            next(_context.t0);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n  return function validateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.validateUser = validateUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGJGdW5jIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJ2YWxpZGF0ZVVzZXIiLCJfcmVmIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiX3JlZ2VuZXJhdG9yIiwibWFyayIsIl9jYWxsZWUiLCJyZXEiLCJyZXMiLCJuZXh0IiwiX3JlcSRhdXRoIiwicmVxdWVzdGVkSWQiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJOdW1iZXIiLCJwYXJhbXMiLCJpZCIsImF1dGgiLCJzdGF0dXMiLCJzZW5kIiwiZGIiLCJnZXRVc2VyQnlJZCIsInQwIiwic3RvcCIsIl94IiwiX3gyIiwiX3gzIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvVm9sdW1lcy9maWZpL1JFQUNUL1JlYWN0X1F1ZXJ5L1JFQUNULVFVRVJZLVN0YXJ0ZXItZmlsZXMvYmFzZS1sYXp5LWRheXMvc2VydmVyL3NyYy9taWRkbGV3YXJlcy8iLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRGdW5jdGlvbiwgUmVxdWVzdCwgUmVxdWVzdEhhbmRsZXIgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IFBhcmFtc0RpY3Rpb25hcnkgfSBmcm9tICdleHByZXNzLXNlcnZlLXN0YXRpYy1jb3JlJztcbmltcG9ydCB7IE9wZXJhdGlvbiB9IGZyb20gJ2Zhc3QtanNvbi1wYXRjaCc7XG5cbmltcG9ydCBkYiBmcm9tICcuLi9kYi1mdW5jJztcblxuZXhwb3J0IGludGVyZmFjZSBpZFBhcmFtc0ludGVyZmFjZSBleHRlbmRzIFBhcmFtc0RpY3Rpb25hcnkge1xuICBpZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc3BvbnNlV2l0aE1lc3NhZ2Uge1xuICBtZXNzYWdlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGF0Y2hSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG4gIHBhdGNoPzogT3BlcmF0aW9uW107XG59XG5cbmV4cG9ydCB0eXBlIEF1dGhSZXF1ZXN0ID0gUmVxdWVzdDxcbiAgaWRQYXJhbXNJbnRlcmZhY2UsXG4gIFJlc3BvbnNlV2l0aE1lc3NhZ2UsXG4gIFBhdGNoUmVxdWVzdCxcbiAgcXMuUGFyc2VkUXMsXG4gIE5leHRGdW5jdGlvblxuPjtcblxuLy8gbWlkZGxld2FyZSBmb3IgdmFsaWRhdGluZyB1c2VyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVVzZXI6IFJlcXVlc3RIYW5kbGVyPFxuICBpZFBhcmFtc0ludGVyZmFjZSxcbiAgUmVzcG9uc2VXaXRoTWVzc2FnZSxcbiAgUGF0Y2hSZXF1ZXN0LFxuICBxcy5QYXJzZWRRcyxcbiAgTmV4dEZ1bmN0aW9uXG4+ID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gY2hlY2sgdGhhdCB0aGUgdG9rZW4gbWF0Y2hlcyB0aGUgaWQgdXJsIHBhcmFtIChkZWNvZGVkIHRva2VuIHJlc2lkZXMgaW4gcmVxLnVzZXIpXG4gICAgY29uc3QgcmVxdWVzdGVkSWQgPSBOdW1iZXIocmVxLnBhcmFtcy5pZCk7XG4gICAgaWYgKHJlcS5hdXRoPy5pZCAhPT0gcmVxdWVzdGVkSWQpIHtcbiAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGZpbmQgdGhlIHVzZXI7IHdpbGwgdGhyb3cgZXJyb3IgaWYgdXNlciBkb2Vzbid0IGV4aXN0XG4gICAgICBhd2FpdCBkYi5nZXRVc2VyQnlJZChyZXF1ZXN0ZWRJZCk7XG4gICAgICBuZXh0KCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIG5leHQoZXJyb3IpO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFzQkE7QUFDQTtBQUNPLElBQU1DLFlBTVo7RUFBQSxJQUFBQyxJQUFBLE9BQUFDLGtCQUFBLDJCQUFBQyxZQUFBLFlBQUFDLElBQUEsQ0FBRyxTQUFBQyxRQUFPQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSTtJQUFBLElBQUFDLFNBQUEsRUFBQUMsV0FBQTtJQUFBLE9BQUFQLFlBQUEsWUFBQVEsSUFBQSxVQUFBQyxTQUFBQyxRQUFBO01BQUE7UUFBQSxRQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBTCxJQUFBO1VBQUE7WUFBQUssUUFBQSxDQUFBQyxJQUFBO1lBRXJCO1lBQ01KLFdBQVcsR0FBR0ssTUFBTSxDQUFDVCxHQUFHLENBQUNVLE1BQU0sQ0FBQ0MsRUFBRSxDQUFDO1lBQUEsTUFDckMsRUFBQVIsU0FBQSxHQUFBSCxHQUFHLENBQUNZLElBQUksY0FBQVQsU0FBQSx1QkFBUkEsU0FBQSxDQUFVUSxFQUFFLE1BQUtQLFdBQVc7Y0FBQUcsUUFBQSxDQUFBTCxJQUFBO2NBQUE7WUFBQTtZQUM5QkQsR0FBRyxDQUFDWSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyxDQUFDO1lBQUNQLFFBQUEsQ0FBQUwsSUFBQTtZQUFBO1VBQUE7WUFBQUssUUFBQSxDQUFBTCxJQUFBO1lBQUEsT0FHakJhLGtCQUFFLENBQUNDLFdBQVcsQ0FBQ1osV0FBVyxDQUFDO1VBQUE7WUFDakNGLElBQUksQ0FBQyxDQUFDO1VBQUM7WUFBQUssUUFBQSxDQUFBTCxJQUFBO1lBQUE7VUFBQTtZQUFBSyxRQUFBLENBQUFDLElBQUE7WUFBQUQsUUFBQSxDQUFBVSxFQUFBLEdBQUFWLFFBQUE7WUFHVEwsSUFBSSxDQUFBSyxRQUFBLENBQUFVLEVBQU0sQ0FBQztVQUFDO1VBQUE7WUFBQSxPQUFBVixRQUFBLENBQUFXLElBQUE7UUFBQTtNQUFBO0lBQUEsR0FBQW5CLE9BQUE7RUFBQSxDQUVmO0VBQUEsZ0JBcEJZTCxZQU1aQSxDQUFBeUIsRUFBQSxFQUFBQyxHQUFBLEVBQUFDLEdBQUE7SUFBQSxPQUFBMUIsSUFBQSxDQUFBMkIsS0FBQSxPQUFBQyxTQUFBO0VBQUE7QUFBQSxHQWNBO0FBQUNDLE9BQUEsQ0FBQTlCLFlBQUEsR0FBQUEsWUFBQSJ9",
    "map": {
      "version": 3,
      "names": [
        "_dbFunc",
        "_interopRequireDefault",
        "require",
        "validateUser",
        "_ref",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "req",
        "res",
        "next",
        "_req$auth",
        "requestedId",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "Number",
        "params",
        "id",
        "auth",
        "status",
        "send",
        "db",
        "getUserById",
        "t0",
        "stop",
        "_x",
        "_x2",
        "_x3",
        "apply",
        "arguments",
        "exports"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/middlewares/",
      "sources": [
        "index.ts"
      ],
      "sourcesContent": [
        "import { NextFunction, Request, RequestHandler } from 'express';\nimport { ParamsDictionary } from 'express-serve-static-core';\nimport { Operation } from 'fast-json-patch';\n\nimport db from '../db-func';\n\nexport interface idParamsInterface extends ParamsDictionary {\n  id: string;\n}\n\nexport interface ResponseWithMessage {\n  message: string;\n}\n\nexport interface PatchRequest extends Request {\n  patch?: Operation[];\n}\n\nexport type AuthRequest = Request<\n  idParamsInterface,\n  ResponseWithMessage,\n  PatchRequest,\n  qs.ParsedQs,\n  NextFunction\n>;\n\n// middleware for validating user\n// eslint-disable-next-line consistent-return\nexport const validateUser: RequestHandler<\n  idParamsInterface,\n  ResponseWithMessage,\n  PatchRequest,\n  qs.ParsedQs,\n  NextFunction\n> = async (req, res, next) => {\n  try {\n    // check that the token matches the id url param (decoded token resides in req.user)\n    const requestedId = Number(req.params.id);\n    if (req.auth?.id !== requestedId) {\n      res.status(401).send();\n    } else {\n      // find the user; will throw error if user doesn't exist\n      await db.getUserById(requestedId);\n      next();\n    }\n  } catch (error) {\n    next(error);\n  }\n};\n"
      ],
      "mappings": ";;;;;;;;;AAIA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAsBA;AACA;AACO,IAAMC,YAMZ;EAAA,IAAAC,IAAA,OAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI;IAAA,IAAAC,SAAA,EAAAC,WAAA;IAAA,OAAAP,YAAA,YAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAL,IAAA;UAAA;YAAAK,QAAA,CAAAC,IAAA;YAErB;YACMJ,WAAW,GAAGK,MAAM,CAACT,GAAG,CAACU,MAAM,CAACC,EAAE,CAAC;YAAA,MACrC,EAAAR,SAAA,GAAAH,GAAG,CAACY,IAAI,cAAAT,SAAA,uBAARA,SAAA,CAAUQ,EAAE,MAAKP,WAAW;cAAAG,QAAA,CAAAL,IAAA;cAAA;YAAA;YAC9BD,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC;YAACP,QAAA,CAAAL,IAAA;YAAA;UAAA;YAAAK,QAAA,CAAAL,IAAA;YAAA,OAGjBa,kBAAE,CAACC,WAAW,CAACZ,WAAW,CAAC;UAAA;YACjCF,IAAI,CAAC,CAAC;UAAC;YAAAK,QAAA,CAAAL,IAAA;YAAA;UAAA;YAAAK,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;YAGTL,IAAI,CAAAK,QAAA,CAAAU,EAAM,CAAC;UAAC;UAAA;YAAA,OAAAV,QAAA,CAAAW,IAAA;QAAA;MAAA;IAAA,GAAAnB,OAAA;EAAA,CAEf;EAAA,gBApBYL,YAMZA,CAAAyB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;EAAA;AAAA,GAcA;AAACC,OAAA,CAAA9B,YAAA,GAAAA,YAAA"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"filename\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"allowNamespaces\":true,\"disallowAmbiguousJSXLike\":false,\"isTSX\":false,\"jsxPragmaFrag\":\"React.Fragment\",\"optimizeConstEnums\":false}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "allowNamespaces": true,
            "disallowAmbiguousJSXLike": false,
            "isTSX": false,
            "jsxPragmaFrag": "React.Fragment",
            "optimizeConstEnums": false
          }
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "ClassBody": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "LogicalExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts",
        "plugins": [
          [
            "typescript",
            {
              "disallowAmbiguousJSXLike": false
            }
          ],
          "classProperties",
          "objectRestSpread",
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/appointment.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
        "sourceFileName": "appointment.ts",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.get = get;\nexports.update = update;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _dbFunc = _interopRequireDefault(require(\"../db-func\"));\n// month and year are required arguments\nfunction get(_x, _x2) {\n  return _get.apply(this, arguments);\n}\nfunction _get() {\n  _get = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n    var _req$params, month, year, appointments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$params = req.params, month = _req$params.month, year = _req$params.year;\n            if (!(!month || !year)) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", res.status(400).json({\n              message: 'month and year are required to get appointments'\n            }));\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _dbFunc[\"default\"].getAppointmentsByMonthYear(month, year);\n          case 6:\n            appointments = _context.sent;\n            return _context.abrupt(\"return\", res.status(200).json(appointments));\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: \"could not get appointments for \".concat(month, \" / \").concat(year, \": \").concat(_context.t0)\n            }));\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n  return _get.apply(this, arguments);\n}\nfunction update(_x3, _x4) {\n  return _update.apply(this, arguments);\n}\nfunction _update() {\n  _update = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n    var id, patch, updatedAppointment;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            id = req.params.id;\n            patch = req.body.data;\n            _context2.next = 5;\n            return _dbFunc[\"default\"].updateItem(Number(id), _dbFunc[\"default\"].filenames.appointments, patch);\n          case 5:\n            updatedAppointment = _context2.sent;\n            return _context2.abrupt(\"return\", res.status(200).json({\n              appointment: updatedAppointment\n            }));\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: \"could not update appointment: \".concat(_context2.t0)\n            }));\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n  return _update.apply(this, arguments);\n}\nvar _default = {\n  get: get,\n  update: update\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGJGdW5jIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJnZXQiLCJfeCIsIl94MiIsIl9nZXQiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9yZWdlbmVyYXRvciIsIm1hcmsiLCJfY2FsbGVlIiwicmVxIiwicmVzIiwiX3JlcSRwYXJhbXMiLCJtb250aCIsInllYXIiLCJhcHBvaW50bWVudHMiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwicGFyYW1zIiwiYWJydXB0Iiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJkYiIsImdldEFwcG9pbnRtZW50c0J5TW9udGhZZWFyIiwic2VudCIsInQwIiwiY29uY2F0Iiwic3RvcCIsInVwZGF0ZSIsIl94MyIsIl94NCIsIl91cGRhdGUiLCJfY2FsbGVlMiIsImlkIiwicGF0Y2giLCJ1cGRhdGVkQXBwb2ludG1lbnQiLCJfY2FsbGVlMiQiLCJfY29udGV4dDIiLCJib2R5IiwiZGF0YSIsInVwZGF0ZUl0ZW0iLCJOdW1iZXIiLCJmaWxlbmFtZXMiLCJhcHBvaW50bWVudCIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL1ZvbHVtZXMvZmlmaS9SRUFDVC9SZWFjdF9RdWVyeS9SRUFDVC1RVUVSWS1TdGFydGVyLWZpbGVzL2Jhc2UtbGF6eS1kYXlzL3NlcnZlci9zcmMvcm91dGUtbWV0aG9kcy8iLCJzb3VyY2VzIjpbImFwcG9pbnRtZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB7IEFwcG9pbnRtZW50IH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL3R5cGVzJztcbmltcG9ydCBkYiBmcm9tICcuLi9kYi1mdW5jJztcblxuLy8gbW9udGggYW5kIHllYXIgYXJlIHJlcXVpcmVkIGFyZ3VtZW50c1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIGNvbnN0IHsgbW9udGgsIHllYXIgfSA9IHJlcS5wYXJhbXM7XG4gIGlmICghbW9udGggfHwgIXllYXIpIHtcbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKDQwMClcbiAgICAgIC5qc29uKHsgbWVzc2FnZTogJ21vbnRoIGFuZCB5ZWFyIGFyZSByZXF1aXJlZCB0byBnZXQgYXBwb2ludG1lbnRzJyB9KTtcbiAgfVxuICB0cnkge1xuICAgIGNvbnN0IGFwcG9pbnRtZW50cyA9IGF3YWl0IGRiLmdldEFwcG9pbnRtZW50c0J5TW9udGhZZWFyKG1vbnRoLCB5ZWFyKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oYXBwb2ludG1lbnRzKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBtZXNzYWdlOiBgY291bGQgbm90IGdldCBhcHBvaW50bWVudHMgZm9yICR7bW9udGh9IC8gJHt5ZWFyfTogJHtlfWAsXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZShyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcbiAgICBjb25zdCBwYXRjaCA9IHJlcS5ib2R5LmRhdGE7XG4gICAgY29uc3QgdXBkYXRlZEFwcG9pbnRtZW50ID0gYXdhaXQgZGIudXBkYXRlSXRlbTxBcHBvaW50bWVudD4oXG4gICAgICBOdW1iZXIoaWQpLFxuICAgICAgZGIuZmlsZW5hbWVzLmFwcG9pbnRtZW50cyxcbiAgICAgIHBhdGNoLFxuICAgICk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgYXBwb2ludG1lbnQ6IHVwZGF0ZWRBcHBvaW50bWVudCB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiByZXNcbiAgICAgIC5zdGF0dXMoNTAwKVxuICAgICAgLmpzb24oeyBtZXNzYWdlOiBgY291bGQgbm90IHVwZGF0ZSBhcHBvaW50bWVudDogJHtlfWAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXQsXG4gIHVwZGF0ZSxcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBR0EsSUFBQUEsT0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBRUE7QUFBQSxTQUNzQkMsR0FBR0EsQ0FBQUMsRUFBQSxFQUFBQyxHQUFBO0VBQUEsT0FBQUMsSUFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBQUFGLEtBQUE7RUFBQUEsSUFBQSxPQUFBRyxrQkFBQSwyQkFBQUMsWUFBQSxZQUFBQyxJQUFBLENBQWxCLFNBQUFDLFFBQW1CQyxHQUFZLEVBQUVDLEdBQWE7SUFBQSxJQUFBQyxXQUFBLEVBQUFDLEtBQUEsRUFBQUMsSUFBQSxFQUFBQyxZQUFBO0lBQUEsT0FBQVIsWUFBQSxZQUFBUyxJQUFBLFVBQUFDLFNBQUFDLFFBQUE7TUFBQTtRQUFBLFFBQUFBLFFBQUEsQ0FBQUMsSUFBQSxHQUFBRCxRQUFBLENBQUFFLElBQUE7VUFBQTtZQUFBUixXQUFBLEdBQzNCRixHQUFHLENBQUNXLE1BQU0sRUFBMUJSLEtBQUssR0FBQUQsV0FBQSxDQUFMQyxLQUFLLEVBQUVDLElBQUksR0FBQUYsV0FBQSxDQUFKRSxJQUFJO1lBQUEsTUFDZixDQUFDRCxLQUFLLElBQUksQ0FBQ0MsSUFBSTtjQUFBSSxRQUFBLENBQUFFLElBQUE7Y0FBQTtZQUFBO1lBQUEsT0FBQUYsUUFBQSxDQUFBSSxNQUFBLFdBQ1ZYLEdBQUcsQ0FDUFksTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUNYQyxJQUFJLENBQUM7Y0FBRUMsT0FBTyxFQUFFO1lBQWtELENBQUMsQ0FBQztVQUFBO1lBQUFQLFFBQUEsQ0FBQUMsSUFBQTtZQUFBRCxRQUFBLENBQUFFLElBQUE7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",
    "map": {
      "version": 3,
      "names": [
        "_dbFunc",
        "_interopRequireDefault",
        "require",
        "get",
        "_x",
        "_x2",
        "_get",
        "apply",
        "arguments",
        "_asyncToGenerator2",
        "_regenerator",
        "mark",
        "_callee",
        "req",
        "res",
        "_req$params",
        "month",
        "year",
        "appointments",
        "wrap",
        "_callee$",
        "_context",
        "prev",
        "next",
        "params",
        "abrupt",
        "status",
        "json",
        "message",
        "db",
        "getAppointmentsByMonthYear",
        "sent",
        "t0",
        "concat",
        "stop",
        "update",
        "_x3",
        "_x4",
        "_update",
        "_callee2",
        "id",
        "patch",
        "updatedAppointment",
        "_callee2$",
        "_context2",
        "body",
        "data",
        "updateItem",
        "Number",
        "filenames",
        "appointment",
        "_default",
        "exports"
      ],
      "sourceRoot": "/Volumes/fifi/REACT/React_Query/REACT-QUERY-Starter-files/base-lazy-days/server/src/route-methods/",
      "sources": [
        "appointment.ts"
      ],
      "sourcesContent": [
        "import { Request, Response } from 'express';\n\nimport { Appointment } from '../../../shared/types';\nimport db from '../db-func';\n\n// month and year are required arguments\nexport async function get(req: Request, res: Response): Promise<Response> {\n  const { month, year } = req.params;\n  if (!month || !year) {\n    return res\n      .status(400)\n      .json({ message: 'month and year are required to get appointments' });\n  }\n  try {\n    const appointments = await db.getAppointmentsByMonthYear(month, year);\n    return res.status(200).json(appointments);\n  } catch (e) {\n    return res.status(500).json({\n      message: `could not get appointments for ${month} / ${year}: ${e}`,\n    });\n  }\n}\n\nexport async function update(req: Request, res: Response): Promise<Response> {\n  try {\n    const { id } = req.params;\n    const patch = req.body.data;\n    const updatedAppointment = await db.updateItem<Appointment>(\n      Number(id),\n      db.filenames.appointments,\n      patch,\n    );\n    return res.status(200).json({ appointment: updatedAppointment });\n  } catch (e) {\n    return res\n      .status(500)\n      .json({ message: `could not update appointment: ${e}` });\n  }\n}\n\nexport default {\n  get,\n  update,\n};\n"
      ],
      "mappings": "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"
    },
    "sourceType": "script",
    "mtime": 1711168351000
  }
}